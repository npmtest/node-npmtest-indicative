{"/home/travis/build/npmtest/node-npmtest-indicative/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_indicative */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-indicative/lib.npmtest_indicative.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/lib.npmtest_indicative.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_indicative */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_indicative = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_indicative = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-indicative/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-indicative && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_indicative */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_indicative","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_indicative.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_indicative.rollup.js'] =","            local.assetsDict['/assets.npmtest_indicative.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_indicative.__dirname + '/lib.npmtest_indicative.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"3":{"start":{"line":14,"column":0},"end":{"line":23,"column":1}}},"branchMap":{},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","const Validator = require('./src/Validator')","const Sanitization = require('./src/Sanitization')","","module.exports = {","  validate: Validator.validate,","  validateAll: Validator.validateAll,","  extend: Validator.extend,","  is: Validator.is,","  'is.extend': Validator.is.extend,","  sanitize: Sanitization.sanitize,","  sanitizor: Sanitization.sanitizor,","  'sanitizor.extend': Sanitization.sanitizor.extend","}",""],"l":{"11":1,"12":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Validator/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Validator/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_mapValidations","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":57}}},"2":{"name":"_settleAllPromises","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":38}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":21},"end":{"line":73,"column":54}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":24},"end":{"line":95,"column":57}}},"5":{"name":"(anonymous_5)","line":120,"loc":{"start":{"line":120,"column":19},"end":{"line":120,"column":52}}},"6":{"name":"(anonymous_6)","line":141,"loc":{"start":{"line":141,"column":22},"end":{"line":141,"column":46}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"8":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":121}},"10":{"start":{"line":33,"column":46},"end":{"line":33,"column":120}},"11":{"start":{"line":47,"column":0},"end":{"line":58,"column":1}},"12":{"start":{"line":48,"column":2},"end":{"line":54,"column":10}},"13":{"start":{"line":51,"column":4},"end":{"line":51,"column":61}},"14":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"15":{"start":{"line":56,"column":4},"end":{"line":56,"column":16}},"16":{"start":{"line":60,"column":0},"end":{"line":60,"column":47}},"17":{"start":{"line":73,"column":0},"end":{"line":83,"column":1}},"18":{"start":{"line":74,"column":2},"end":{"line":74,"column":27}},"19":{"start":{"line":75,"column":2},"end":{"line":75,"column":61}},"20":{"start":{"line":76,"column":2},"end":{"line":76,"column":71}},"21":{"start":{"line":78,"column":2},"end":{"line":82,"column":4}},"22":{"start":{"line":79,"column":4},"end":{"line":81,"column":38}},"23":{"start":{"line":80,"column":16},"end":{"line":80,"column":29}},"24":{"start":{"line":81,"column":22},"end":{"line":81,"column":37}},"25":{"start":{"line":95,"column":0},"end":{"line":106,"column":1}},"26":{"start":{"line":96,"column":2},"end":{"line":96,"column":27}},"27":{"start":{"line":97,"column":2},"end":{"line":97,"column":61}},"28":{"start":{"line":98,"column":2},"end":{"line":98,"column":77}},"29":{"start":{"line":100,"column":2},"end":{"line":105,"column":4}},"30":{"start":{"line":101,"column":4},"end":{"line":104,"column":18}},"31":{"start":{"line":103,"column":16},"end":{"line":103,"column":29}},"32":{"start":{"line":120,"column":0},"end":{"line":126,"column":1}},"33":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"34":{"start":{"line":122,"column":4},"end":{"line":122,"column":76}},"35":{"start":{"line":124,"column":2},"end":{"line":124,"column":28}},"36":{"start":{"line":125,"column":2},"end":{"line":125,"column":42}},"37":{"start":{"line":128,"column":0},"end":{"line":128,"column":32}},"38":{"start":{"line":141,"column":0},"end":{"line":146,"column":1}},"39":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"40":{"start":{"line":143,"column":4},"end":{"line":143,"column":88}},"41":{"start":{"line":145,"column":2},"end":{"line":145,"column":29}},"42":{"start":{"line":151,"column":0},"end":{"line":151,"column":29}}},"branchMap":{"1":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":41},"end":{"line":51,"column":54}},{"start":{"line":51,"column":57},"end":{"line":51,"column":61}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":13},"end":{"line":74,"column":21}},{"start":{"line":74,"column":25},"end":{"line":74,"column":27}}]},"4":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":13},"end":{"line":96,"column":21}},{"start":{"line":96,"column":25},"end":{"line":96,"column":27}}]},"5":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"6":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","const _ = require('lodash')","const Parser = require('../Parser')","const Validations = require('../Validations')","const ValidationEngine = require('./engine')","const Messages = require('../Messages')","const Modes = require('../Modes')","const Q = require('q')","","/**"," * map all parsedRules into a validation messages to be executed"," * using Q."," *"," * @param   {Object} data"," * @param   {Object} rules"," * @param   {Object} messages"," *"," * @return  {Array}"," *"," * @private"," */","function _mapValidations (data, rules, messages, runAll) {","  return _.map(rules, (validations, field) => ValidationEngine.validateField(data, field, validations, messages, runAll))","}","","/**"," * it manually maps all the errors returned by Q.allSettled"," * and throws them as an array only if there are errors."," *"," * @param  {Array} results"," *"," * @return {void}"," * @throws {Error} If promise resolves to errors or a single error"," *"," * @private"," */","function _settleAllPromises (results) {","  const errors = _(results)","  .flatten()","  .map((result) => {","    return result.state === 'rejected' ? result.reason : null","  })","  .compact()","  .value()","  if (_.size(errors)) {","    throw errors","  }","}","","const Validator = exports = module.exports = {}","","/**"," * validate a set of async validations mapped as field and rule"," * called rules."," *"," * @param  {Object} data"," * @param  {Object} rules"," * @param  {Object} messages"," *"," * @return {Object|Array}"," */","","Validator.validate = function (data, rules, messages) {","  messages = messages || {}","  const transformedRules = Parser.transformRules(data, rules)","  const validations = _mapValidations(data, transformedRules, messages)","","  return Q.Promise((resolve, reject) => {","    Q.all(validations)","    .then(() => resolve(data))","    .catch((error) => reject([error]))","  })","}","","/**"," * Just like validate but waits for all the validations to occur"," * and returns an array of errors."," *"," * @param  {Object} data"," * @param  {Object} rules"," * @param  {Object} messages"," *"," * @return {Object|Array}"," */","Validator.validateAll = function (data, rules, messages) {","  messages = messages || {}","  const transformedRules = Parser.transformRules(data, rules)","  const validations = _mapValidations(data, transformedRules, messages, true)","","  return Q.Promise((resolve, reject) => {","    Q.all(validations)","    .then(_settleAllPromises)","    .then(() => resolve(data))","    .catch(reject)","  })","}","","/**"," * exposes an interface to extend the validator and add"," * new methods to it."," *"," * @param  {String} name"," * @param  {Function} method"," * @param  {String} message"," *"," * @return {void}"," *"," * @throws {Error} If method is not a function"," */","Validator.extend = function (name, method, message) {","  if (typeof (method) !== 'function') {","    throw new Error('Invalid arguments, extend expects a method to execute')","  }","  Validations[name] = method","  Messages.set(_.snakeCase(name), message)","}","","Validator.is = require('../Raw')","","/**"," * exposes an interface to extend the raw validator and add"," * own methods to it."," *"," * @param  {String} name"," * @param  {Function} method"," *"," * @return {void}"," *"," * @throws {Error} If method is not a function"," */","Validator.is.extend = function (name, method) {","  if (typeof (method) !== 'function') {","    throw new Error('Invalid arguments, is.extends expects 2nd parameter as a function')","  }","  Validator.is[name] = method","}","","/**"," * @see Modes.set"," */","Validator.setMode = Modes.set",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"32":1,"33":0,"47":1,"48":0,"51":0,"55":0,"56":0,"60":1,"73":1,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"95":1,"96":0,"97":0,"98":0,"100":0,"101":0,"103":0,"120":1,"121":0,"122":0,"124":0,"125":0,"128":1,"141":1,"142":0,"143":0,"145":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Parser/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Parser/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":47}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":26},"end":{"line":45,"column":49}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":15},"end":{"line":58,"column":38}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":69}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":24},"end":{"line":90,"column":47}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":31},"end":{"line":106,"column":66}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":23},"end":{"line":125,"column":52}}},"8":{"name":"(anonymous_8)","line":144,"loc":{"start":{"line":144,"column":24},"end":{"line":144,"column":47}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"4":{"start":{"line":27,"column":0},"end":{"line":34,"column":1}},"5":{"start":{"line":28,"column":2},"end":{"line":33,"column":10}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":52}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":33}},"8":{"start":{"line":45,"column":0},"end":{"line":49,"column":1}},"9":{"start":{"line":46,"column":2},"end":{"line":48,"column":4}},"10":{"start":{"line":47,"column":4},"end":{"line":47,"column":39}},"11":{"start":{"line":58,"column":0},"end":{"line":61,"column":1}},"12":{"start":{"line":59,"column":2},"end":{"line":59,"column":94}},"13":{"start":{"line":60,"column":2},"end":{"line":60,"column":44}},"14":{"start":{"line":71,"column":0},"end":{"line":77,"column":1}},"15":{"start":{"line":72,"column":2},"end":{"line":72,"column":54}},"16":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"17":{"start":{"line":74,"column":4},"end":{"line":74,"column":22}},"18":{"start":{"line":76,"column":2},"end":{"line":76,"column":50}},"19":{"start":{"line":90,"column":0},"end":{"line":92,"column":1}},"20":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"21":{"start":{"line":106,"column":0},"end":{"line":111,"column":1}},"22":{"start":{"line":107,"column":2},"end":{"line":110,"column":5}},"23":{"start":{"line":108,"column":4},"end":{"line":108,"column":97}},"24":{"start":{"line":108,"column":67},"end":{"line":108,"column":86}},"25":{"start":{"line":109,"column":4},"end":{"line":109,"column":42}},"26":{"start":{"line":125,"column":0},"end":{"line":131,"column":1}},"27":{"start":{"line":126,"column":2},"end":{"line":130,"column":3}},"28":{"start":{"line":128,"column":27},"end":{"line":128,"column":86}},"29":{"start":{"line":129,"column":10},"end":{"line":129,"column":44}},"30":{"start":{"line":144,"column":0},"end":{"line":150,"column":1}},"31":{"start":{"line":145,"column":2},"end":{"line":149,"column":10}},"32":{"start":{"line":147,"column":4},"end":{"line":147,"column":61}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":28},"end":{"line":30,"column":47}},{"start":{"line":30,"column":50},"end":{"line":30,"column":52}}]},"2":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":58},"end":{"line":59,"column":69}},{"start":{"line":59,"column":72},"end":{"line":59,"column":94}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","const arrayExpressionRegex = /(\\w[^\\.\\*]+)(\\.\\*\\.?)(.+)?/","const _ = require('lodash')","","let Parser = exports = module.exports = {}","","/**"," * parse a validation validation string to fetch"," * args from it."," *"," * @param   {String} validation"," *"," * @return  {Object}"," *"," * @private"," */","const _parseValidation = function (validation) {","  return _(validation.split(':'))","  .thru((value) => {","    const args = value[1] ? value[1].split(',') : []","    return {name: value[0], args}","  })","  .value()","}","","/**"," * parse all validation strings to object."," *"," * @param   {Array} validations"," *"," * @return  {Array}"," *"," * @private"," */","const _parseValidations = function (validations) {","  return _.map(validations, (validation) => {","    return _parseValidation(validation)","  })","}","","/**"," * parse a given set of validations to a consumable array."," *"," * @param  {String|Array} rule"," *"," * @return {Array}"," */","Parser.parse = function (validations) {","  const validationsArray = validations instanceof Array ? validations : validations.split('|')","  return _parseValidations(validationsArray)","}","","/**"," * parses an array expression to a consumable object"," *"," * @param  {String} field"," * @return {Object|Null}"," *"," * @public"," */","Parser.expressionCurryFor = function (field, whenMatched, otherwise) {","  const expression = field.match(arrayExpressionRegex)","  if (_.size(expression) < 4) {","    return otherwise()","  }","  return whenMatched(expression[1], expression[3])","}","","/**"," * parses a rule and returns an object with"," * field name and parsed rule."," *"," * @param   {String} rule"," * @param   {String} field"," *"," * @return  {Object}"," *"," * @private"," */","Parser.parseFieldRule = function (rule, field) {","  return {[field]: Parser.parse(rule)}","}","","/**"," * parses field rules for a array expressions"," *"," * @param   {Object} data"," * @param   {String} rule"," * @param   {String} node"," * @param   {String} [child]"," *"," * @return  {Object}"," *"," * @private"," */","Parser.getRulesForExpression = function (data, rule, node, child) {","  return _.fromPairs(_.map(data[node], (value, index) => {","    const fieldName = _([node, index, child]).takeWhile((value) => value !== undefined).join('.')","    return [fieldName, Parser.parse(rule)]","  }))","}","","/**"," * transforms a single rule or an array expression"," * into multiple rules"," *"," * @param   {Object} data"," * @param   {String} rule"," * @param   {String} field"," *"," * @return  {Object}"," *"," * @private"," */","Parser.transformRule = function (data, rule, field) {","  return Parser.expressionCurryFor(","    field,","    (dataKey, fieldKey) => Parser.getRulesForExpression(data, rule, dataKey, fieldKey),","    () => Parser.parseFieldRule(rule, field)","  )","}","","/**"," * transform rules by parsing each rule and converting"," * array expressions into multiple rules"," *"," * @param   {Object} data"," * @param   {Object} rules"," *"," * @return  {Object}"," *"," * @private"," */","Parser.transformRules = function (data, rules) {","  return _(rules)","  .transform((result, rule, field) => {","    _.extend(result, Parser.transformRule(data, rule, field))","  })","  .value()","}",""],"l":{"12":1,"13":1,"15":1,"27":1,"28":0,"30":0,"31":0,"45":1,"46":0,"47":0,"58":1,"59":0,"60":0,"71":1,"72":0,"73":0,"74":0,"76":0,"90":1,"91":0,"106":1,"107":0,"108":0,"109":0,"125":1,"126":0,"128":0,"129":0,"144":1,"145":0,"147":0}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Validations/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Validations/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":1,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":1,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":1,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":1,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":1,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":1,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":1,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":1,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":1,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":35}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":24},"end":{"line":45,"column":67}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":21},"end":{"line":46,"column":48}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":20},"end":{"line":72,"column":63}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":21},"end":{"line":73,"column":48}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":23},"end":{"line":98,"column":66}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":21},"end":{"line":99,"column":48}}},"8":{"name":"(anonymous_8)","line":124,"loc":{"start":{"line":124,"column":20},"end":{"line":124,"column":63}}},"9":{"name":"(anonymous_9)","line":125,"loc":{"start":{"line":125,"column":21},"end":{"line":125,"column":48}}},"10":{"name":"(anonymous_10)","line":151,"loc":{"start":{"line":151,"column":28},"end":{"line":151,"column":71}}},"11":{"name":"(anonymous_11)","line":152,"loc":{"start":{"line":152,"column":21},"end":{"line":152,"column":48}}},"12":{"name":"(anonymous_12)","line":180,"loc":{"start":{"line":180,"column":29},"end":{"line":180,"column":72}}},"13":{"name":"(anonymous_13)","line":181,"loc":{"start":{"line":181,"column":21},"end":{"line":181,"column":48}}},"14":{"name":"(anonymous_14)","line":209,"loc":{"start":{"line":209,"column":20},"end":{"line":209,"column":63}}},"15":{"name":"(anonymous_15)","line":210,"loc":{"start":{"line":210,"column":21},"end":{"line":210,"column":48}}},"16":{"name":"(anonymous_16)","line":236,"loc":{"start":{"line":236,"column":27},"end":{"line":236,"column":70}}},"17":{"name":"(anonymous_17)","line":237,"loc":{"start":{"line":237,"column":21},"end":{"line":237,"column":48}}},"18":{"name":"(anonymous_18)","line":263,"loc":{"start":{"line":263,"column":20},"end":{"line":263,"column":63}}},"19":{"name":"(anonymous_19)","line":264,"loc":{"start":{"line":264,"column":21},"end":{"line":264,"column":48}}},"20":{"name":"(anonymous_20)","line":290,"loc":{"start":{"line":290,"column":18},"end":{"line":290,"column":61}}},"21":{"name":"(anonymous_21)","line":291,"loc":{"start":{"line":291,"column":21},"end":{"line":291,"column":48}}},"22":{"name":"(anonymous_22)","line":317,"loc":{"start":{"line":317,"column":21},"end":{"line":317,"column":64}}},"23":{"name":"(anonymous_23)","line":318,"loc":{"start":{"line":318,"column":21},"end":{"line":318,"column":48}}},"24":{"name":"(anonymous_24)","line":344,"loc":{"start":{"line":344,"column":19},"end":{"line":344,"column":62}}},"25":{"name":"(anonymous_25)","line":345,"loc":{"start":{"line":345,"column":21},"end":{"line":345,"column":48}}},"26":{"name":"(anonymous_26)","line":371,"loc":{"start":{"line":371,"column":17},"end":{"line":371,"column":60}}},"27":{"name":"(anonymous_27)","line":372,"loc":{"start":{"line":372,"column":21},"end":{"line":372,"column":48}}},"28":{"name":"(anonymous_28)","line":398,"loc":{"start":{"line":398,"column":19},"end":{"line":398,"column":62}}},"29":{"name":"(anonymous_29)","line":399,"loc":{"start":{"line":399,"column":21},"end":{"line":399,"column":48}}},"30":{"name":"(anonymous_30)","line":425,"loc":{"start":{"line":425,"column":19},"end":{"line":425,"column":62}}},"31":{"name":"(anonymous_31)","line":426,"loc":{"start":{"line":426,"column":21},"end":{"line":426,"column":48}}},"32":{"name":"(anonymous_32)","line":452,"loc":{"start":{"line":452,"column":22},"end":{"line":452,"column":65}}},"33":{"name":"(anonymous_33)","line":453,"loc":{"start":{"line":453,"column":21},"end":{"line":453,"column":48}}},"34":{"name":"(anonymous_34)","line":480,"loc":{"start":{"line":480,"column":22},"end":{"line":480,"column":65}}},"35":{"name":"(anonymous_35)","line":481,"loc":{"start":{"line":481,"column":21},"end":{"line":481,"column":48}}},"36":{"name":"(anonymous_36)","line":517,"loc":{"start":{"line":517,"column":21},"end":{"line":517,"column":64}}},"37":{"name":"(anonymous_37)","line":518,"loc":{"start":{"line":518,"column":21},"end":{"line":518,"column":48}}},"38":{"name":"(anonymous_38)","line":544,"loc":{"start":{"line":544,"column":19},"end":{"line":544,"column":62}}},"39":{"name":"(anonymous_39)","line":546,"loc":{"start":{"line":546,"column":21},"end":{"line":546,"column":48}}},"40":{"name":"(anonymous_40)","line":572,"loc":{"start":{"line":572,"column":25},"end":{"line":572,"column":68}}},"41":{"name":"(anonymous_41)","line":574,"loc":{"start":{"line":574,"column":21},"end":{"line":574,"column":48}}},"42":{"name":"(anonymous_42)","line":600,"loc":{"start":{"line":600,"column":17},"end":{"line":600,"column":60}}},"43":{"name":"(anonymous_43)","line":601,"loc":{"start":{"line":601,"column":21},"end":{"line":601,"column":48}}},"44":{"name":"(anonymous_44)","line":627,"loc":{"start":{"line":627,"column":20},"end":{"line":627,"column":63}}},"45":{"name":"(anonymous_45)","line":628,"loc":{"start":{"line":628,"column":21},"end":{"line":628,"column":48}}},"46":{"name":"(anonymous_46)","line":655,"loc":{"start":{"line":655,"column":23},"end":{"line":655,"column":66}}},"47":{"name":"(anonymous_47)","line":656,"loc":{"start":{"line":656,"column":21},"end":{"line":656,"column":48}}},"48":{"name":"(anonymous_48)","line":678,"loc":{"start":{"line":678,"column":25},"end":{"line":678,"column":68}}},"49":{"name":"(anonymous_49)","line":680,"loc":{"start":{"line":680,"column":21},"end":{"line":680,"column":48}}},"50":{"name":"(anonymous_50)","line":708,"loc":{"start":{"line":708,"column":27},"end":{"line":708,"column":70}}},"51":{"name":"(anonymous_51)","line":711,"loc":{"start":{"line":711,"column":21},"end":{"line":711,"column":48}}},"52":{"name":"(anonymous_52)","line":739,"loc":{"start":{"line":739,"column":30},"end":{"line":739,"column":73}}},"53":{"name":"(anonymous_53)","line":740,"loc":{"start":{"line":740,"column":21},"end":{"line":740,"column":48}}},"54":{"name":"(anonymous_54)","line":747,"loc":{"start":{"line":747,"column":17},"end":{"line":747,"column":33}}},"55":{"name":"(anonymous_55)","line":781,"loc":{"start":{"line":781,"column":30},"end":{"line":781,"column":73}}},"56":{"name":"(anonymous_56)","line":782,"loc":{"start":{"line":782,"column":21},"end":{"line":782,"column":48}}},"57":{"name":"(anonymous_57)","line":789,"loc":{"start":{"line":789,"column":17},"end":{"line":789,"column":33}}},"58":{"name":"(anonymous_58)","line":822,"loc":{"start":{"line":822,"column":33},"end":{"line":822,"column":76}}},"59":{"name":"(anonymous_59)","line":823,"loc":{"start":{"line":823,"column":21},"end":{"line":823,"column":48}}},"60":{"name":"(anonymous_60)","line":830,"loc":{"start":{"line":830,"column":17},"end":{"line":830,"column":33}}},"61":{"name":"(anonymous_61)","line":864,"loc":{"start":{"line":864,"column":33},"end":{"line":864,"column":76}}},"62":{"name":"(anonymous_62)","line":865,"loc":{"start":{"line":865,"column":21},"end":{"line":865,"column":48}}},"63":{"name":"(anonymous_63)","line":872,"loc":{"start":{"line":872,"column":17},"end":{"line":872,"column":33}}},"64":{"name":"(anonymous_64)","line":906,"loc":{"start":{"line":906,"column":19},"end":{"line":906,"column":62}}},"65":{"name":"(anonymous_65)","line":908,"loc":{"start":{"line":908,"column":21},"end":{"line":908,"column":48}}},"66":{"name":"(anonymous_66)","line":941,"loc":{"start":{"line":941,"column":24},"end":{"line":941,"column":67}}},"67":{"name":"(anonymous_67)","line":943,"loc":{"start":{"line":943,"column":21},"end":{"line":943,"column":48}}},"68":{"name":"(anonymous_68)","line":976,"loc":{"start":{"line":976,"column":21},"end":{"line":976,"column":64}}},"69":{"name":"(anonymous_69)","line":978,"loc":{"start":{"line":978,"column":21},"end":{"line":978,"column":48}}},"70":{"name":"(anonymous_70)","line":1005,"loc":{"start":{"line":1005,"column":24},"end":{"line":1005,"column":67}}},"71":{"name":"(anonymous_71)","line":1007,"loc":{"start":{"line":1007,"column":21},"end":{"line":1007,"column":48}}},"72":{"name":"(anonymous_72)","line":1034,"loc":{"start":{"line":1034,"column":20},"end":{"line":1034,"column":63}}},"73":{"name":"(anonymous_73)","line":1037,"loc":{"start":{"line":1037,"column":21},"end":{"line":1037,"column":48}}},"74":{"name":"(anonymous_74)","line":1068,"loc":{"start":{"line":1068,"column":18},"end":{"line":1068,"column":61}}},"75":{"name":"(anonymous_75)","line":1070,"loc":{"start":{"line":1070,"column":21},"end":{"line":1070,"column":48}}},"76":{"name":"(anonymous_76)","line":1097,"loc":{"start":{"line":1097,"column":18},"end":{"line":1097,"column":61}}},"77":{"name":"(anonymous_77)","line":1099,"loc":{"start":{"line":1099,"column":21},"end":{"line":1099,"column":48}}},"78":{"name":"(anonymous_78)","line":1126,"loc":{"start":{"line":1126,"column":20},"end":{"line":1126,"column":63}}},"79":{"name":"(anonymous_79)","line":1128,"loc":{"start":{"line":1128,"column":21},"end":{"line":1128,"column":48}}},"80":{"name":"(anonymous_80)","line":1155,"loc":{"start":{"line":1155,"column":20},"end":{"line":1155,"column":63}}},"81":{"name":"(anonymous_81)","line":1157,"loc":{"start":{"line":1157,"column":21},"end":{"line":1157,"column":48}}},"82":{"name":"(anonymous_82)","line":1184,"loc":{"start":{"line":1184,"column":23},"end":{"line":1184,"column":66}}},"83":{"name":"(anonymous_83)","line":1186,"loc":{"start":{"line":1186,"column":21},"end":{"line":1186,"column":48}}},"84":{"name":"(anonymous_84)","line":1213,"loc":{"start":{"line":1213,"column":25},"end":{"line":1213,"column":68}}},"85":{"name":"(anonymous_85)","line":1215,"loc":{"start":{"line":1215,"column":21},"end":{"line":1215,"column":48}}},"86":{"name":"(anonymous_86)","line":1242,"loc":{"start":{"line":1242,"column":23},"end":{"line":1242,"column":66}}},"87":{"name":"(anonymous_87)","line":1244,"loc":{"start":{"line":1244,"column":21},"end":{"line":1244,"column":48}}},"88":{"name":"(anonymous_88)","line":1271,"loc":{"start":{"line":1271,"column":20},"end":{"line":1271,"column":63}}},"89":{"name":"(anonymous_89)","line":1274,"loc":{"start":{"line":1274,"column":21},"end":{"line":1274,"column":48}}},"90":{"name":"(anonymous_90)","line":1301,"loc":{"start":{"line":1301,"column":21},"end":{"line":1301,"column":64}}},"91":{"name":"(anonymous_91)","line":1302,"loc":{"start":{"line":1302,"column":21},"end":{"line":1302,"column":48}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":47}},"4":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":85}},"6":{"start":{"line":45,"column":0},"end":{"line":59,"column":1}},"7":{"start":{"line":46,"column":2},"end":{"line":58,"column":4}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":39}},"9":{"start":{"line":48,"column":4},"end":{"line":48,"column":66}},"10":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"11":{"start":{"line":50,"column":6},"end":{"line":50,"column":35}},"12":{"start":{"line":51,"column":6},"end":{"line":51,"column":12}},"13":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"14":{"start":{"line":54,"column":6},"end":{"line":54,"column":34}},"15":{"start":{"line":55,"column":6},"end":{"line":55,"column":12}},"16":{"start":{"line":57,"column":4},"end":{"line":57,"column":19}},"17":{"start":{"line":72,"column":0},"end":{"line":85,"column":1}},"18":{"start":{"line":73,"column":2},"end":{"line":84,"column":4}},"19":{"start":{"line":74,"column":4},"end":{"line":74,"column":39}},"20":{"start":{"line":75,"column":4},"end":{"line":78,"column":5}},"21":{"start":{"line":76,"column":6},"end":{"line":76,"column":35}},"22":{"start":{"line":77,"column":6},"end":{"line":77,"column":12}},"23":{"start":{"line":79,"column":4},"end":{"line":82,"column":5}},"24":{"start":{"line":80,"column":6},"end":{"line":80,"column":34}},"25":{"start":{"line":81,"column":6},"end":{"line":81,"column":12}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":19}},"27":{"start":{"line":98,"column":0},"end":{"line":111,"column":1}},"28":{"start":{"line":99,"column":2},"end":{"line":110,"column":4}},"29":{"start":{"line":100,"column":4},"end":{"line":100,"column":39}},"30":{"start":{"line":101,"column":4},"end":{"line":104,"column":5}},"31":{"start":{"line":102,"column":6},"end":{"line":102,"column":35}},"32":{"start":{"line":103,"column":6},"end":{"line":103,"column":12}},"33":{"start":{"line":105,"column":4},"end":{"line":108,"column":5}},"34":{"start":{"line":106,"column":6},"end":{"line":106,"column":34}},"35":{"start":{"line":107,"column":6},"end":{"line":107,"column":12}},"36":{"start":{"line":109,"column":4},"end":{"line":109,"column":19}},"37":{"start":{"line":124,"column":0},"end":{"line":137,"column":1}},"38":{"start":{"line":125,"column":2},"end":{"line":136,"column":4}},"39":{"start":{"line":126,"column":4},"end":{"line":126,"column":39}},"40":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"41":{"start":{"line":128,"column":6},"end":{"line":128,"column":35}},"42":{"start":{"line":129,"column":6},"end":{"line":129,"column":12}},"43":{"start":{"line":131,"column":4},"end":{"line":134,"column":5}},"44":{"start":{"line":132,"column":6},"end":{"line":132,"column":34}},"45":{"start":{"line":133,"column":6},"end":{"line":133,"column":12}},"46":{"start":{"line":135,"column":4},"end":{"line":135,"column":19}},"47":{"start":{"line":151,"column":0},"end":{"line":166,"column":1}},"48":{"start":{"line":152,"column":2},"end":{"line":165,"column":4}},"49":{"start":{"line":153,"column":4},"end":{"line":153,"column":39}},"50":{"start":{"line":154,"column":4},"end":{"line":154,"column":34}},"51":{"start":{"line":155,"column":4},"end":{"line":155,"column":23}},"52":{"start":{"line":156,"column":4},"end":{"line":159,"column":5}},"53":{"start":{"line":157,"column":6},"end":{"line":157,"column":35}},"54":{"start":{"line":158,"column":6},"end":{"line":158,"column":12}},"55":{"start":{"line":160,"column":4},"end":{"line":163,"column":5}},"56":{"start":{"line":161,"column":6},"end":{"line":161,"column":34}},"57":{"start":{"line":162,"column":6},"end":{"line":162,"column":12}},"58":{"start":{"line":164,"column":4},"end":{"line":164,"column":19}},"59":{"start":{"line":180,"column":0},"end":{"line":195,"column":1}},"60":{"start":{"line":181,"column":2},"end":{"line":194,"column":4}},"61":{"start":{"line":182,"column":4},"end":{"line":182,"column":39}},"62":{"start":{"line":183,"column":4},"end":{"line":183,"column":34}},"63":{"start":{"line":184,"column":4},"end":{"line":184,"column":23}},"64":{"start":{"line":185,"column":4},"end":{"line":188,"column":5}},"65":{"start":{"line":186,"column":6},"end":{"line":186,"column":35}},"66":{"start":{"line":187,"column":6},"end":{"line":187,"column":12}},"67":{"start":{"line":189,"column":4},"end":{"line":192,"column":5}},"68":{"start":{"line":190,"column":6},"end":{"line":190,"column":34}},"69":{"start":{"line":191,"column":6},"end":{"line":191,"column":12}},"70":{"start":{"line":193,"column":4},"end":{"line":193,"column":19}},"71":{"start":{"line":209,"column":0},"end":{"line":222,"column":1}},"72":{"start":{"line":210,"column":2},"end":{"line":221,"column":4}},"73":{"start":{"line":211,"column":4},"end":{"line":211,"column":39}},"74":{"start":{"line":212,"column":4},"end":{"line":215,"column":5}},"75":{"start":{"line":213,"column":6},"end":{"line":213,"column":35}},"76":{"start":{"line":214,"column":6},"end":{"line":214,"column":12}},"77":{"start":{"line":216,"column":4},"end":{"line":219,"column":5}},"78":{"start":{"line":217,"column":6},"end":{"line":217,"column":34}},"79":{"start":{"line":218,"column":6},"end":{"line":218,"column":12}},"80":{"start":{"line":220,"column":4},"end":{"line":220,"column":19}},"81":{"start":{"line":236,"column":0},"end":{"line":249,"column":1}},"82":{"start":{"line":237,"column":2},"end":{"line":248,"column":4}},"83":{"start":{"line":238,"column":4},"end":{"line":238,"column":39}},"84":{"start":{"line":239,"column":4},"end":{"line":242,"column":5}},"85":{"start":{"line":240,"column":6},"end":{"line":240,"column":35}},"86":{"start":{"line":241,"column":6},"end":{"line":241,"column":12}},"87":{"start":{"line":243,"column":4},"end":{"line":246,"column":5}},"88":{"start":{"line":244,"column":6},"end":{"line":244,"column":34}},"89":{"start":{"line":245,"column":6},"end":{"line":245,"column":12}},"90":{"start":{"line":247,"column":4},"end":{"line":247,"column":19}},"91":{"start":{"line":263,"column":0},"end":{"line":276,"column":1}},"92":{"start":{"line":264,"column":2},"end":{"line":275,"column":4}},"93":{"start":{"line":265,"column":4},"end":{"line":265,"column":39}},"94":{"start":{"line":266,"column":4},"end":{"line":269,"column":5}},"95":{"start":{"line":267,"column":6},"end":{"line":267,"column":35}},"96":{"start":{"line":268,"column":6},"end":{"line":268,"column":12}},"97":{"start":{"line":270,"column":4},"end":{"line":273,"column":5}},"98":{"start":{"line":271,"column":6},"end":{"line":271,"column":34}},"99":{"start":{"line":272,"column":6},"end":{"line":272,"column":12}},"100":{"start":{"line":274,"column":4},"end":{"line":274,"column":19}},"101":{"start":{"line":290,"column":0},"end":{"line":303,"column":1}},"102":{"start":{"line":291,"column":2},"end":{"line":302,"column":4}},"103":{"start":{"line":292,"column":4},"end":{"line":292,"column":39}},"104":{"start":{"line":293,"column":4},"end":{"line":296,"column":5}},"105":{"start":{"line":294,"column":6},"end":{"line":294,"column":35}},"106":{"start":{"line":295,"column":6},"end":{"line":295,"column":12}},"107":{"start":{"line":297,"column":4},"end":{"line":300,"column":5}},"108":{"start":{"line":298,"column":6},"end":{"line":298,"column":34}},"109":{"start":{"line":299,"column":6},"end":{"line":299,"column":12}},"110":{"start":{"line":301,"column":4},"end":{"line":301,"column":19}},"111":{"start":{"line":317,"column":0},"end":{"line":330,"column":1}},"112":{"start":{"line":318,"column":2},"end":{"line":329,"column":4}},"113":{"start":{"line":319,"column":4},"end":{"line":319,"column":39}},"114":{"start":{"line":320,"column":4},"end":{"line":323,"column":5}},"115":{"start":{"line":321,"column":6},"end":{"line":321,"column":35}},"116":{"start":{"line":322,"column":6},"end":{"line":322,"column":12}},"117":{"start":{"line":324,"column":4},"end":{"line":327,"column":5}},"118":{"start":{"line":325,"column":6},"end":{"line":325,"column":34}},"119":{"start":{"line":326,"column":6},"end":{"line":326,"column":12}},"120":{"start":{"line":328,"column":4},"end":{"line":328,"column":19}},"121":{"start":{"line":344,"column":0},"end":{"line":357,"column":1}},"122":{"start":{"line":345,"column":2},"end":{"line":356,"column":4}},"123":{"start":{"line":346,"column":4},"end":{"line":346,"column":39}},"124":{"start":{"line":347,"column":4},"end":{"line":350,"column":5}},"125":{"start":{"line":348,"column":6},"end":{"line":348,"column":35}},"126":{"start":{"line":349,"column":6},"end":{"line":349,"column":12}},"127":{"start":{"line":351,"column":4},"end":{"line":354,"column":5}},"128":{"start":{"line":352,"column":6},"end":{"line":352,"column":34}},"129":{"start":{"line":353,"column":6},"end":{"line":353,"column":12}},"130":{"start":{"line":355,"column":4},"end":{"line":355,"column":19}},"131":{"start":{"line":371,"column":0},"end":{"line":384,"column":1}},"132":{"start":{"line":372,"column":2},"end":{"line":383,"column":4}},"133":{"start":{"line":373,"column":4},"end":{"line":373,"column":39}},"134":{"start":{"line":374,"column":4},"end":{"line":377,"column":5}},"135":{"start":{"line":375,"column":6},"end":{"line":375,"column":35}},"136":{"start":{"line":376,"column":6},"end":{"line":376,"column":12}},"137":{"start":{"line":378,"column":4},"end":{"line":381,"column":5}},"138":{"start":{"line":379,"column":6},"end":{"line":379,"column":34}},"139":{"start":{"line":380,"column":6},"end":{"line":380,"column":12}},"140":{"start":{"line":382,"column":4},"end":{"line":382,"column":19}},"141":{"start":{"line":398,"column":0},"end":{"line":411,"column":1}},"142":{"start":{"line":399,"column":2},"end":{"line":410,"column":4}},"143":{"start":{"line":400,"column":4},"end":{"line":400,"column":39}},"144":{"start":{"line":401,"column":4},"end":{"line":404,"column":5}},"145":{"start":{"line":402,"column":6},"end":{"line":402,"column":35}},"146":{"start":{"line":403,"column":6},"end":{"line":403,"column":12}},"147":{"start":{"line":405,"column":4},"end":{"line":408,"column":5}},"148":{"start":{"line":406,"column":6},"end":{"line":406,"column":34}},"149":{"start":{"line":407,"column":6},"end":{"line":407,"column":12}},"150":{"start":{"line":409,"column":4},"end":{"line":409,"column":19}},"151":{"start":{"line":425,"column":0},"end":{"line":438,"column":1}},"152":{"start":{"line":426,"column":2},"end":{"line":437,"column":4}},"153":{"start":{"line":427,"column":4},"end":{"line":427,"column":39}},"154":{"start":{"line":428,"column":4},"end":{"line":431,"column":5}},"155":{"start":{"line":429,"column":6},"end":{"line":429,"column":35}},"156":{"start":{"line":430,"column":6},"end":{"line":430,"column":12}},"157":{"start":{"line":432,"column":4},"end":{"line":435,"column":5}},"158":{"start":{"line":433,"column":6},"end":{"line":433,"column":34}},"159":{"start":{"line":434,"column":6},"end":{"line":434,"column":12}},"160":{"start":{"line":436,"column":4},"end":{"line":436,"column":19}},"161":{"start":{"line":452,"column":0},"end":{"line":465,"column":1}},"162":{"start":{"line":453,"column":2},"end":{"line":464,"column":4}},"163":{"start":{"line":454,"column":4},"end":{"line":454,"column":39}},"164":{"start":{"line":455,"column":4},"end":{"line":458,"column":5}},"165":{"start":{"line":456,"column":6},"end":{"line":456,"column":35}},"166":{"start":{"line":457,"column":6},"end":{"line":457,"column":12}},"167":{"start":{"line":459,"column":4},"end":{"line":462,"column":5}},"168":{"start":{"line":460,"column":6},"end":{"line":460,"column":34}},"169":{"start":{"line":461,"column":6},"end":{"line":461,"column":12}},"170":{"start":{"line":463,"column":4},"end":{"line":463,"column":19}},"171":{"start":{"line":480,"column":0},"end":{"line":503,"column":1}},"172":{"start":{"line":481,"column":2},"end":{"line":502,"column":4}},"173":{"start":{"line":482,"column":4},"end":{"line":482,"column":37}},"174":{"start":{"line":483,"column":4},"end":{"line":486,"column":5}},"175":{"start":{"line":484,"column":6},"end":{"line":484,"column":35}},"176":{"start":{"line":485,"column":6},"end":{"line":485,"column":12}},"177":{"start":{"line":491,"column":4},"end":{"line":495,"column":5}},"178":{"start":{"line":492,"column":6},"end":{"line":492,"column":20}},"179":{"start":{"line":493,"column":11},"end":{"line":495,"column":5}},"180":{"start":{"line":494,"column":6},"end":{"line":494,"column":20}},"181":{"start":{"line":497,"column":4},"end":{"line":500,"column":5}},"182":{"start":{"line":498,"column":6},"end":{"line":498,"column":34}},"183":{"start":{"line":499,"column":6},"end":{"line":499,"column":12}},"184":{"start":{"line":501,"column":4},"end":{"line":501,"column":19}},"185":{"start":{"line":517,"column":0},"end":{"line":530,"column":1}},"186":{"start":{"line":518,"column":2},"end":{"line":529,"column":4}},"187":{"start":{"line":519,"column":4},"end":{"line":519,"column":39}},"188":{"start":{"line":520,"column":4},"end":{"line":523,"column":5}},"189":{"start":{"line":521,"column":6},"end":{"line":521,"column":35}},"190":{"start":{"line":522,"column":6},"end":{"line":522,"column":12}},"191":{"start":{"line":524,"column":4},"end":{"line":527,"column":5}},"192":{"start":{"line":525,"column":6},"end":{"line":525,"column":34}},"193":{"start":{"line":526,"column":6},"end":{"line":526,"column":12}},"194":{"start":{"line":528,"column":4},"end":{"line":528,"column":19}},"195":{"start":{"line":544,"column":0},"end":{"line":558,"column":1}},"196":{"start":{"line":545,"column":2},"end":{"line":545,"column":74}},"197":{"start":{"line":546,"column":2},"end":{"line":557,"column":4}},"198":{"start":{"line":547,"column":4},"end":{"line":547,"column":39}},"199":{"start":{"line":548,"column":4},"end":{"line":551,"column":5}},"200":{"start":{"line":549,"column":6},"end":{"line":549,"column":35}},"201":{"start":{"line":550,"column":6},"end":{"line":550,"column":12}},"202":{"start":{"line":552,"column":4},"end":{"line":555,"column":5}},"203":{"start":{"line":553,"column":6},"end":{"line":553,"column":34}},"204":{"start":{"line":554,"column":6},"end":{"line":554,"column":12}},"205":{"start":{"line":556,"column":4},"end":{"line":556,"column":19}},"206":{"start":{"line":572,"column":0},"end":{"line":586,"column":1}},"207":{"start":{"line":573,"column":2},"end":{"line":573,"column":24}},"208":{"start":{"line":574,"column":2},"end":{"line":585,"column":4}},"209":{"start":{"line":575,"column":4},"end":{"line":575,"column":39}},"210":{"start":{"line":576,"column":4},"end":{"line":579,"column":5}},"211":{"start":{"line":577,"column":6},"end":{"line":577,"column":35}},"212":{"start":{"line":578,"column":6},"end":{"line":578,"column":12}},"213":{"start":{"line":580,"column":4},"end":{"line":583,"column":5}},"214":{"start":{"line":581,"column":6},"end":{"line":581,"column":34}},"215":{"start":{"line":582,"column":6},"end":{"line":582,"column":12}},"216":{"start":{"line":584,"column":4},"end":{"line":584,"column":19}},"217":{"start":{"line":600,"column":0},"end":{"line":613,"column":1}},"218":{"start":{"line":601,"column":2},"end":{"line":612,"column":4}},"219":{"start":{"line":602,"column":4},"end":{"line":602,"column":39}},"220":{"start":{"line":603,"column":4},"end":{"line":606,"column":5}},"221":{"start":{"line":604,"column":6},"end":{"line":604,"column":35}},"222":{"start":{"line":605,"column":6},"end":{"line":605,"column":12}},"223":{"start":{"line":607,"column":4},"end":{"line":610,"column":5}},"224":{"start":{"line":608,"column":6},"end":{"line":608,"column":34}},"225":{"start":{"line":609,"column":6},"end":{"line":609,"column":12}},"226":{"start":{"line":611,"column":4},"end":{"line":611,"column":19}},"227":{"start":{"line":627,"column":0},"end":{"line":640,"column":1}},"228":{"start":{"line":628,"column":2},"end":{"line":639,"column":4}},"229":{"start":{"line":629,"column":4},"end":{"line":629,"column":39}},"230":{"start":{"line":630,"column":4},"end":{"line":633,"column":5}},"231":{"start":{"line":631,"column":6},"end":{"line":631,"column":35}},"232":{"start":{"line":632,"column":6},"end":{"line":632,"column":12}},"233":{"start":{"line":634,"column":4},"end":{"line":637,"column":5}},"234":{"start":{"line":635,"column":6},"end":{"line":635,"column":34}},"235":{"start":{"line":636,"column":6},"end":{"line":636,"column":12}},"236":{"start":{"line":638,"column":4},"end":{"line":638,"column":19}},"237":{"start":{"line":655,"column":0},"end":{"line":664,"column":1}},"238":{"start":{"line":656,"column":2},"end":{"line":663,"column":4}},"239":{"start":{"line":657,"column":4},"end":{"line":657,"column":39}},"240":{"start":{"line":658,"column":4},"end":{"line":661,"column":5}},"241":{"start":{"line":659,"column":6},"end":{"line":659,"column":34}},"242":{"start":{"line":660,"column":6},"end":{"line":660,"column":12}},"243":{"start":{"line":662,"column":4},"end":{"line":662,"column":19}},"244":{"start":{"line":678,"column":0},"end":{"line":694,"column":1}},"245":{"start":{"line":679,"column":2},"end":{"line":679,"column":27}},"246":{"start":{"line":680,"column":2},"end":{"line":693,"column":4}},"247":{"start":{"line":681,"column":4},"end":{"line":681,"column":47}},"248":{"start":{"line":682,"column":4},"end":{"line":685,"column":5}},"249":{"start":{"line":683,"column":6},"end":{"line":683,"column":35}},"250":{"start":{"line":684,"column":6},"end":{"line":684,"column":12}},"251":{"start":{"line":687,"column":4},"end":{"line":687,"column":39}},"252":{"start":{"line":688,"column":4},"end":{"line":691,"column":5}},"253":{"start":{"line":689,"column":6},"end":{"line":689,"column":34}},"254":{"start":{"line":690,"column":6},"end":{"line":690,"column":12}},"255":{"start":{"line":692,"column":4},"end":{"line":692,"column":19}},"256":{"start":{"line":708,"column":0},"end":{"line":725,"column":1}},"257":{"start":{"line":709,"column":2},"end":{"line":709,"column":27}},"258":{"start":{"line":710,"column":2},"end":{"line":710,"column":40}},"259":{"start":{"line":711,"column":2},"end":{"line":724,"column":4}},"260":{"start":{"line":712,"column":4},"end":{"line":712,"column":47}},"261":{"start":{"line":713,"column":4},"end":{"line":716,"column":5}},"262":{"start":{"line":714,"column":6},"end":{"line":714,"column":35}},"263":{"start":{"line":715,"column":6},"end":{"line":715,"column":12}},"264":{"start":{"line":718,"column":4},"end":{"line":718,"column":39}},"265":{"start":{"line":719,"column":4},"end":{"line":722,"column":5}},"266":{"start":{"line":720,"column":6},"end":{"line":720,"column":34}},"267":{"start":{"line":721,"column":6},"end":{"line":721,"column":12}},"268":{"start":{"line":723,"column":4},"end":{"line":723,"column":19}},"269":{"start":{"line":739,"column":0},"end":{"line":767,"column":1}},"270":{"start":{"line":740,"column":2},"end":{"line":766,"column":4}},"271":{"start":{"line":741,"column":4},"end":{"line":741,"column":26}},"272":{"start":{"line":747,"column":4},"end":{"line":753,"column":6}},"273":{"start":{"line":748,"column":6},"end":{"line":748,"column":39}},"274":{"start":{"line":749,"column":6},"end":{"line":752,"column":7}},"275":{"start":{"line":750,"column":8},"end":{"line":750,"column":24}},"276":{"start":{"line":751,"column":8},"end":{"line":751,"column":14}},"277":{"start":{"line":755,"column":4},"end":{"line":758,"column":5}},"278":{"start":{"line":756,"column":6},"end":{"line":756,"column":35}},"279":{"start":{"line":757,"column":6},"end":{"line":757,"column":12}},"280":{"start":{"line":760,"column":4},"end":{"line":760,"column":39}},"281":{"start":{"line":761,"column":4},"end":{"line":764,"column":5}},"282":{"start":{"line":762,"column":6},"end":{"line":762,"column":34}},"283":{"start":{"line":763,"column":6},"end":{"line":763,"column":12}},"284":{"start":{"line":765,"column":4},"end":{"line":765,"column":19}},"285":{"start":{"line":781,"column":0},"end":{"line":808,"column":1}},"286":{"start":{"line":782,"column":2},"end":{"line":807,"column":4}},"287":{"start":{"line":783,"column":4},"end":{"line":783,"column":27}},"288":{"start":{"line":789,"column":4},"end":{"line":794,"column":6}},"289":{"start":{"line":790,"column":6},"end":{"line":790,"column":39}},"290":{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},"291":{"start":{"line":792,"column":8},"end":{"line":792,"column":25}},"292":{"start":{"line":796,"column":4},"end":{"line":799,"column":5}},"293":{"start":{"line":797,"column":6},"end":{"line":797,"column":35}},"294":{"start":{"line":798,"column":6},"end":{"line":798,"column":12}},"295":{"start":{"line":801,"column":4},"end":{"line":801,"column":39}},"296":{"start":{"line":802,"column":4},"end":{"line":805,"column":5}},"297":{"start":{"line":803,"column":6},"end":{"line":803,"column":34}},"298":{"start":{"line":804,"column":6},"end":{"line":804,"column":12}},"299":{"start":{"line":806,"column":4},"end":{"line":806,"column":19}},"300":{"start":{"line":822,"column":0},"end":{"line":850,"column":1}},"301":{"start":{"line":823,"column":2},"end":{"line":849,"column":4}},"302":{"start":{"line":824,"column":4},"end":{"line":824,"column":30}},"303":{"start":{"line":830,"column":4},"end":{"line":836,"column":6}},"304":{"start":{"line":831,"column":6},"end":{"line":831,"column":39}},"305":{"start":{"line":832,"column":6},"end":{"line":835,"column":7}},"306":{"start":{"line":833,"column":8},"end":{"line":833,"column":28}},"307":{"start":{"line":834,"column":8},"end":{"line":834,"column":14}},"308":{"start":{"line":838,"column":4},"end":{"line":841,"column":5}},"309":{"start":{"line":839,"column":6},"end":{"line":839,"column":35}},"310":{"start":{"line":840,"column":6},"end":{"line":840,"column":12}},"311":{"start":{"line":843,"column":4},"end":{"line":843,"column":39}},"312":{"start":{"line":844,"column":4},"end":{"line":847,"column":5}},"313":{"start":{"line":845,"column":6},"end":{"line":845,"column":34}},"314":{"start":{"line":846,"column":6},"end":{"line":846,"column":12}},"315":{"start":{"line":848,"column":4},"end":{"line":848,"column":19}},"316":{"start":{"line":864,"column":0},"end":{"line":892,"column":1}},"317":{"start":{"line":865,"column":2},"end":{"line":891,"column":4}},"318":{"start":{"line":866,"column":4},"end":{"line":866,"column":30}},"319":{"start":{"line":872,"column":4},"end":{"line":878,"column":6}},"320":{"start":{"line":873,"column":6},"end":{"line":873,"column":39}},"321":{"start":{"line":874,"column":6},"end":{"line":877,"column":7}},"322":{"start":{"line":875,"column":8},"end":{"line":875,"column":28}},"323":{"start":{"line":876,"column":8},"end":{"line":876,"column":14}},"324":{"start":{"line":880,"column":4},"end":{"line":883,"column":5}},"325":{"start":{"line":881,"column":6},"end":{"line":881,"column":35}},"326":{"start":{"line":882,"column":6},"end":{"line":882,"column":12}},"327":{"start":{"line":885,"column":4},"end":{"line":885,"column":39}},"328":{"start":{"line":886,"column":4},"end":{"line":889,"column":5}},"329":{"start":{"line":887,"column":6},"end":{"line":887,"column":34}},"330":{"start":{"line":888,"column":6},"end":{"line":888,"column":12}},"331":{"start":{"line":890,"column":4},"end":{"line":890,"column":19}},"332":{"start":{"line":906,"column":0},"end":{"line":927,"column":1}},"333":{"start":{"line":907,"column":2},"end":{"line":907,"column":31}},"334":{"start":{"line":908,"column":2},"end":{"line":926,"column":4}},"335":{"start":{"line":909,"column":4},"end":{"line":909,"column":55}},"336":{"start":{"line":910,"column":4},"end":{"line":913,"column":5}},"337":{"start":{"line":911,"column":6},"end":{"line":911,"column":35}},"338":{"start":{"line":912,"column":6},"end":{"line":912,"column":12}},"339":{"start":{"line":915,"column":4},"end":{"line":915,"column":39}},"340":{"start":{"line":916,"column":4},"end":{"line":919,"column":5}},"341":{"start":{"line":917,"column":6},"end":{"line":917,"column":35}},"342":{"start":{"line":918,"column":6},"end":{"line":918,"column":12}},"343":{"start":{"line":921,"column":4},"end":{"line":924,"column":5}},"344":{"start":{"line":922,"column":6},"end":{"line":922,"column":34}},"345":{"start":{"line":923,"column":6},"end":{"line":923,"column":12}},"346":{"start":{"line":925,"column":4},"end":{"line":925,"column":19}},"347":{"start":{"line":941,"column":0},"end":{"line":962,"column":1}},"348":{"start":{"line":942,"column":2},"end":{"line":942,"column":31}},"349":{"start":{"line":943,"column":2},"end":{"line":961,"column":4}},"350":{"start":{"line":944,"column":4},"end":{"line":944,"column":55}},"351":{"start":{"line":945,"column":4},"end":{"line":948,"column":5}},"352":{"start":{"line":946,"column":6},"end":{"line":946,"column":35}},"353":{"start":{"line":947,"column":6},"end":{"line":947,"column":12}},"354":{"start":{"line":950,"column":4},"end":{"line":950,"column":39}},"355":{"start":{"line":951,"column":4},"end":{"line":954,"column":5}},"356":{"start":{"line":952,"column":6},"end":{"line":952,"column":35}},"357":{"start":{"line":953,"column":6},"end":{"line":953,"column":12}},"358":{"start":{"line":956,"column":4},"end":{"line":959,"column":5}},"359":{"start":{"line":957,"column":6},"end":{"line":957,"column":34}},"360":{"start":{"line":958,"column":6},"end":{"line":958,"column":12}},"361":{"start":{"line":960,"column":4},"end":{"line":960,"column":19}},"362":{"start":{"line":976,"column":0},"end":{"line":991,"column":1}},"363":{"start":{"line":977,"column":2},"end":{"line":977,"column":31}},"364":{"start":{"line":978,"column":2},"end":{"line":990,"column":4}},"365":{"start":{"line":979,"column":4},"end":{"line":979,"column":39}},"366":{"start":{"line":980,"column":4},"end":{"line":983,"column":5}},"367":{"start":{"line":981,"column":6},"end":{"line":981,"column":35}},"368":{"start":{"line":982,"column":6},"end":{"line":982,"column":12}},"369":{"start":{"line":985,"column":4},"end":{"line":988,"column":5}},"370":{"start":{"line":986,"column":6},"end":{"line":986,"column":34}},"371":{"start":{"line":987,"column":6},"end":{"line":987,"column":12}},"372":{"start":{"line":989,"column":4},"end":{"line":989,"column":19}},"373":{"start":{"line":1005,"column":0},"end":{"line":1020,"column":1}},"374":{"start":{"line":1006,"column":2},"end":{"line":1006,"column":31}},"375":{"start":{"line":1007,"column":2},"end":{"line":1019,"column":4}},"376":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":39}},"377":{"start":{"line":1009,"column":4},"end":{"line":1012,"column":5}},"378":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":35}},"379":{"start":{"line":1011,"column":6},"end":{"line":1011,"column":12}},"380":{"start":{"line":1014,"column":4},"end":{"line":1017,"column":5}},"381":{"start":{"line":1015,"column":6},"end":{"line":1015,"column":34}},"382":{"start":{"line":1016,"column":6},"end":{"line":1016,"column":12}},"383":{"start":{"line":1018,"column":4},"end":{"line":1018,"column":19}},"384":{"start":{"line":1034,"column":0},"end":{"line":1054,"column":1}},"385":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":21}},"386":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":21}},"387":{"start":{"line":1037,"column":2},"end":{"line":1053,"column":4}},"388":{"start":{"line":1038,"column":4},"end":{"line":1040,"column":5}},"389":{"start":{"line":1039,"column":6},"end":{"line":1039,"column":75}},"390":{"start":{"line":1042,"column":4},"end":{"line":1042,"column":39}},"391":{"start":{"line":1043,"column":4},"end":{"line":1046,"column":5}},"392":{"start":{"line":1044,"column":6},"end":{"line":1044,"column":35}},"393":{"start":{"line":1045,"column":6},"end":{"line":1045,"column":12}},"394":{"start":{"line":1048,"column":4},"end":{"line":1051,"column":5}},"395":{"start":{"line":1049,"column":6},"end":{"line":1049,"column":34}},"396":{"start":{"line":1050,"column":6},"end":{"line":1050,"column":12}},"397":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":19}},"398":{"start":{"line":1068,"column":0},"end":{"line":1083,"column":1}},"399":{"start":{"line":1069,"column":2},"end":{"line":1069,"column":27}},"400":{"start":{"line":1070,"column":2},"end":{"line":1082,"column":4}},"401":{"start":{"line":1071,"column":4},"end":{"line":1071,"column":39}},"402":{"start":{"line":1072,"column":4},"end":{"line":1075,"column":5}},"403":{"start":{"line":1073,"column":6},"end":{"line":1073,"column":35}},"404":{"start":{"line":1074,"column":6},"end":{"line":1074,"column":12}},"405":{"start":{"line":1077,"column":4},"end":{"line":1080,"column":5}},"406":{"start":{"line":1078,"column":6},"end":{"line":1078,"column":34}},"407":{"start":{"line":1079,"column":6},"end":{"line":1079,"column":12}},"408":{"start":{"line":1081,"column":4},"end":{"line":1081,"column":19}},"409":{"start":{"line":1097,"column":0},"end":{"line":1112,"column":1}},"410":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":27}},"411":{"start":{"line":1099,"column":2},"end":{"line":1111,"column":4}},"412":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":39}},"413":{"start":{"line":1101,"column":4},"end":{"line":1104,"column":5}},"414":{"start":{"line":1102,"column":6},"end":{"line":1102,"column":35}},"415":{"start":{"line":1103,"column":6},"end":{"line":1103,"column":12}},"416":{"start":{"line":1106,"column":4},"end":{"line":1109,"column":5}},"417":{"start":{"line":1107,"column":6},"end":{"line":1107,"column":34}},"418":{"start":{"line":1108,"column":6},"end":{"line":1108,"column":12}},"419":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":19}},"420":{"start":{"line":1126,"column":0},"end":{"line":1141,"column":1}},"421":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":26}},"422":{"start":{"line":1128,"column":2},"end":{"line":1140,"column":4}},"423":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":39}},"424":{"start":{"line":1130,"column":4},"end":{"line":1133,"column":5}},"425":{"start":{"line":1131,"column":6},"end":{"line":1131,"column":35}},"426":{"start":{"line":1132,"column":6},"end":{"line":1132,"column":12}},"427":{"start":{"line":1135,"column":4},"end":{"line":1138,"column":5}},"428":{"start":{"line":1136,"column":6},"end":{"line":1136,"column":34}},"429":{"start":{"line":1137,"column":6},"end":{"line":1137,"column":12}},"430":{"start":{"line":1139,"column":4},"end":{"line":1139,"column":19}},"431":{"start":{"line":1155,"column":0},"end":{"line":1170,"column":1}},"432":{"start":{"line":1156,"column":2},"end":{"line":1156,"column":26}},"433":{"start":{"line":1157,"column":2},"end":{"line":1169,"column":4}},"434":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":39}},"435":{"start":{"line":1159,"column":4},"end":{"line":1162,"column":5}},"436":{"start":{"line":1160,"column":6},"end":{"line":1160,"column":35}},"437":{"start":{"line":1161,"column":6},"end":{"line":1161,"column":12}},"438":{"start":{"line":1164,"column":4},"end":{"line":1167,"column":5}},"439":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":34}},"440":{"start":{"line":1166,"column":6},"end":{"line":1166,"column":12}},"441":{"start":{"line":1168,"column":4},"end":{"line":1168,"column":19}},"442":{"start":{"line":1184,"column":0},"end":{"line":1199,"column":1}},"443":{"start":{"line":1185,"column":2},"end":{"line":1185,"column":27}},"444":{"start":{"line":1186,"column":2},"end":{"line":1198,"column":4}},"445":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":39}},"446":{"start":{"line":1188,"column":4},"end":{"line":1191,"column":5}},"447":{"start":{"line":1189,"column":6},"end":{"line":1189,"column":35}},"448":{"start":{"line":1190,"column":6},"end":{"line":1190,"column":12}},"449":{"start":{"line":1193,"column":4},"end":{"line":1196,"column":5}},"450":{"start":{"line":1194,"column":6},"end":{"line":1194,"column":34}},"451":{"start":{"line":1195,"column":6},"end":{"line":1195,"column":12}},"452":{"start":{"line":1197,"column":4},"end":{"line":1197,"column":19}},"453":{"start":{"line":1213,"column":0},"end":{"line":1228,"column":1}},"454":{"start":{"line":1214,"column":2},"end":{"line":1214,"column":27}},"455":{"start":{"line":1215,"column":2},"end":{"line":1227,"column":4}},"456":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":39}},"457":{"start":{"line":1217,"column":4},"end":{"line":1220,"column":5}},"458":{"start":{"line":1218,"column":6},"end":{"line":1218,"column":35}},"459":{"start":{"line":1219,"column":6},"end":{"line":1219,"column":12}},"460":{"start":{"line":1222,"column":4},"end":{"line":1225,"column":5}},"461":{"start":{"line":1223,"column":6},"end":{"line":1223,"column":34}},"462":{"start":{"line":1224,"column":6},"end":{"line":1224,"column":12}},"463":{"start":{"line":1226,"column":4},"end":{"line":1226,"column":19}},"464":{"start":{"line":1242,"column":0},"end":{"line":1257,"column":1}},"465":{"start":{"line":1243,"column":2},"end":{"line":1243,"column":27}},"466":{"start":{"line":1244,"column":2},"end":{"line":1256,"column":4}},"467":{"start":{"line":1245,"column":4},"end":{"line":1245,"column":39}},"468":{"start":{"line":1246,"column":4},"end":{"line":1249,"column":5}},"469":{"start":{"line":1247,"column":6},"end":{"line":1247,"column":35}},"470":{"start":{"line":1248,"column":6},"end":{"line":1248,"column":12}},"471":{"start":{"line":1251,"column":4},"end":{"line":1254,"column":5}},"472":{"start":{"line":1252,"column":6},"end":{"line":1252,"column":34}},"473":{"start":{"line":1253,"column":6},"end":{"line":1253,"column":12}},"474":{"start":{"line":1255,"column":4},"end":{"line":1255,"column":19}},"475":{"start":{"line":1271,"column":0},"end":{"line":1288,"column":1}},"476":{"start":{"line":1272,"column":2},"end":{"line":1272,"column":26}},"477":{"start":{"line":1273,"column":2},"end":{"line":1273,"column":28}},"478":{"start":{"line":1274,"column":2},"end":{"line":1287,"column":4}},"479":{"start":{"line":1275,"column":4},"end":{"line":1275,"column":39}},"480":{"start":{"line":1276,"column":4},"end":{"line":1279,"column":5}},"481":{"start":{"line":1277,"column":6},"end":{"line":1277,"column":35}},"482":{"start":{"line":1278,"column":6},"end":{"line":1278,"column":12}},"483":{"start":{"line":1281,"column":4},"end":{"line":1281,"column":91}},"484":{"start":{"line":1282,"column":4},"end":{"line":1285,"column":5}},"485":{"start":{"line":1283,"column":6},"end":{"line":1283,"column":34}},"486":{"start":{"line":1284,"column":6},"end":{"line":1284,"column":12}},"487":{"start":{"line":1286,"column":4},"end":{"line":1286,"column":19}},"488":{"start":{"line":1301,"column":0},"end":{"line":1315,"column":1}},"489":{"start":{"line":1302,"column":2},"end":{"line":1314,"column":4}},"490":{"start":{"line":1303,"column":4},"end":{"line":1303,"column":39}},"491":{"start":{"line":1304,"column":4},"end":{"line":1307,"column":5}},"492":{"start":{"line":1305,"column":6},"end":{"line":1305,"column":35}},"493":{"start":{"line":1306,"column":6},"end":{"line":1306,"column":12}},"494":{"start":{"line":1309,"column":4},"end":{"line":1312,"column":5}},"495":{"start":{"line":1310,"column":6},"end":{"line":1310,"column":34}},"496":{"start":{"line":1311,"column":6},"end":{"line":1311,"column":12}},"497":{"start":{"line":1313,"column":4},"end":{"line":1313,"column":19}},"498":{"start":{"line":1320,"column":0},"end":{"line":1320,"column":39}}},"branchMap":{"1":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":36},"end":{"line":31,"column":64}},{"start":{"line":31,"column":67},"end":{"line":31,"column":85}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"7":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"8":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"9":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"11":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"12":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"13":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"14":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"15":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"16":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":29}},{"start":{"line":216,"column":33},"end":{"line":216,"column":52}}]},"17":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"18":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"19":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":36}},{"start":{"line":243,"column":40},"end":{"line":243,"column":59}}]},"20":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"21":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":270,"column":4}},{"start":{"line":270,"column":4},"end":{"line":270,"column":4}}]},"22":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":4},"end":{"line":293,"column":4}},{"start":{"line":293,"column":4},"end":{"line":293,"column":4}}]},"23":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"24":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":4},"end":{"line":320,"column":4}},{"start":{"line":320,"column":4},"end":{"line":320,"column":4}}]},"25":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"26":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":347,"column":4}},{"start":{"line":347,"column":4},"end":{"line":347,"column":4}}]},"27":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"28":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"29":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":378,"column":4}},{"start":{"line":378,"column":4},"end":{"line":378,"column":4}}]},"30":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":401,"column":4}},{"start":{"line":401,"column":4},"end":{"line":401,"column":4}}]},"31":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":4},"end":{"line":405,"column":4}},{"start":{"line":405,"column":4},"end":{"line":405,"column":4}}]},"32":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":4},"end":{"line":428,"column":4}},{"start":{"line":428,"column":4},"end":{"line":428,"column":4}}]},"33":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]},"34":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":4},"end":{"line":455,"column":4}},{"start":{"line":455,"column":4},"end":{"line":455,"column":4}}]},"35":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":459,"column":4}},{"start":{"line":459,"column":4},"end":{"line":459,"column":4}}]},"36":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":4},"end":{"line":483,"column":4}},{"start":{"line":483,"column":4},"end":{"line":483,"column":4}}]},"37":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":491,"column":4}},{"start":{"line":491,"column":4},"end":{"line":491,"column":4}}]},"38":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":11},"end":{"line":493,"column":11}},{"start":{"line":493,"column":11},"end":{"line":493,"column":11}}]},"39":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":4},"end":{"line":497,"column":4}},{"start":{"line":497,"column":4},"end":{"line":497,"column":4}}]},"40":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":4},"end":{"line":520,"column":4}},{"start":{"line":520,"column":4},"end":{"line":520,"column":4}}]},"41":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":4},"end":{"line":524,"column":4}},{"start":{"line":524,"column":4},"end":{"line":524,"column":4}}]},"42":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":548,"column":4}},{"start":{"line":548,"column":4},"end":{"line":548,"column":4}}]},"43":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":4},"end":{"line":552,"column":4}},{"start":{"line":552,"column":4},"end":{"line":552,"column":4}}]},"44":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":4},"end":{"line":576,"column":4}},{"start":{"line":576,"column":4},"end":{"line":576,"column":4}}]},"45":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":4},"end":{"line":580,"column":4}},{"start":{"line":580,"column":4},"end":{"line":580,"column":4}}]},"46":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":4},"end":{"line":603,"column":4}},{"start":{"line":603,"column":4},"end":{"line":603,"column":4}}]},"47":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":4},"end":{"line":607,"column":4}},{"start":{"line":607,"column":4},"end":{"line":607,"column":4}}]},"48":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":4},"end":{"line":630,"column":4}},{"start":{"line":630,"column":4},"end":{"line":630,"column":4}}]},"49":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":4},"end":{"line":634,"column":4}},{"start":{"line":634,"column":4},"end":{"line":634,"column":4}}]},"50":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":4},"end":{"line":658,"column":4}},{"start":{"line":658,"column":4},"end":{"line":658,"column":4}}]},"51":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":4},"end":{"line":682,"column":4}},{"start":{"line":682,"column":4},"end":{"line":682,"column":4}}]},"52":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":4},"end":{"line":688,"column":4}},{"start":{"line":688,"column":4},"end":{"line":688,"column":4}}]},"53":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":4},"end":{"line":713,"column":4}},{"start":{"line":713,"column":4},"end":{"line":713,"column":4}}]},"54":{"line":713,"type":"binary-expr","locations":[{"start":{"line":713,"column":8},"end":{"line":713,"column":23}},{"start":{"line":713,"column":27},"end":{"line":713,"column":68}}]},"55":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"56":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":6},"end":{"line":749,"column":6}},{"start":{"line":749,"column":6},"end":{"line":749,"column":6}}]},"57":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":4},"end":{"line":755,"column":4}},{"start":{"line":755,"column":4},"end":{"line":755,"column":4}}]},"58":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":761,"column":4}},{"start":{"line":761,"column":4},"end":{"line":761,"column":4}}]},"59":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":6},"end":{"line":791,"column":6}},{"start":{"line":791,"column":6},"end":{"line":791,"column":6}}]},"60":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":4},"end":{"line":796,"column":4}},{"start":{"line":796,"column":4},"end":{"line":796,"column":4}}]},"61":{"line":802,"type":"if","locations":[{"start":{"line":802,"column":4},"end":{"line":802,"column":4}},{"start":{"line":802,"column":4},"end":{"line":802,"column":4}}]},"62":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":6},"end":{"line":832,"column":6}},{"start":{"line":832,"column":6},"end":{"line":832,"column":6}}]},"63":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":4},"end":{"line":838,"column":4}},{"start":{"line":838,"column":4},"end":{"line":838,"column":4}}]},"64":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":4}},{"start":{"line":844,"column":4},"end":{"line":844,"column":4}}]},"65":{"line":874,"type":"if","locations":[{"start":{"line":874,"column":6},"end":{"line":874,"column":6}},{"start":{"line":874,"column":6},"end":{"line":874,"column":6}}]},"66":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":4},"end":{"line":880,"column":4}},{"start":{"line":880,"column":4},"end":{"line":880,"column":4}}]},"67":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":4},"end":{"line":886,"column":4}},{"start":{"line":886,"column":4},"end":{"line":886,"column":4}}]},"68":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":4},"end":{"line":910,"column":4}},{"start":{"line":910,"column":4},"end":{"line":910,"column":4}}]},"69":{"line":916,"type":"if","locations":[{"start":{"line":916,"column":4},"end":{"line":916,"column":4}},{"start":{"line":916,"column":4},"end":{"line":916,"column":4}}]},"70":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":4},"end":{"line":921,"column":4}},{"start":{"line":921,"column":4},"end":{"line":921,"column":4}}]},"71":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":4},"end":{"line":945,"column":4}},{"start":{"line":945,"column":4},"end":{"line":945,"column":4}}]},"72":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":4},"end":{"line":951,"column":4}},{"start":{"line":951,"column":4},"end":{"line":951,"column":4}}]},"73":{"line":956,"type":"if","locations":[{"start":{"line":956,"column":4},"end":{"line":956,"column":4}},{"start":{"line":956,"column":4},"end":{"line":956,"column":4}}]},"74":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":4},"end":{"line":980,"column":4}},{"start":{"line":980,"column":4},"end":{"line":980,"column":4}}]},"75":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":4},"end":{"line":985,"column":4}},{"start":{"line":985,"column":4},"end":{"line":985,"column":4}}]},"76":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":4},"end":{"line":1009,"column":4}},{"start":{"line":1009,"column":4},"end":{"line":1009,"column":4}}]},"77":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":4},"end":{"line":1014,"column":4}},{"start":{"line":1014,"column":4},"end":{"line":1014,"column":4}}]},"78":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}},{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}}]},"79":{"line":1038,"type":"binary-expr","locations":[{"start":{"line":1038,"column":8},"end":{"line":1038,"column":12}},{"start":{"line":1038,"column":16},"end":{"line":1038,"column":20}}]},"80":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":4},"end":{"line":1043,"column":4}},{"start":{"line":1043,"column":4},"end":{"line":1043,"column":4}}]},"81":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}},{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}}]},"82":{"line":1072,"type":"if","locations":[{"start":{"line":1072,"column":4},"end":{"line":1072,"column":4}},{"start":{"line":1072,"column":4},"end":{"line":1072,"column":4}}]},"83":{"line":1077,"type":"if","locations":[{"start":{"line":1077,"column":4},"end":{"line":1077,"column":4}},{"start":{"line":1077,"column":4},"end":{"line":1077,"column":4}}]},"84":{"line":1101,"type":"if","locations":[{"start":{"line":1101,"column":4},"end":{"line":1101,"column":4}},{"start":{"line":1101,"column":4},"end":{"line":1101,"column":4}}]},"85":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":4},"end":{"line":1106,"column":4}},{"start":{"line":1106,"column":4},"end":{"line":1106,"column":4}}]},"86":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":4},"end":{"line":1130,"column":4}},{"start":{"line":1130,"column":4},"end":{"line":1130,"column":4}}]},"87":{"line":1135,"type":"if","locations":[{"start":{"line":1135,"column":4},"end":{"line":1135,"column":4}},{"start":{"line":1135,"column":4},"end":{"line":1135,"column":4}}]},"88":{"line":1159,"type":"if","locations":[{"start":{"line":1159,"column":4},"end":{"line":1159,"column":4}},{"start":{"line":1159,"column":4},"end":{"line":1159,"column":4}}]},"89":{"line":1164,"type":"if","locations":[{"start":{"line":1164,"column":4},"end":{"line":1164,"column":4}},{"start":{"line":1164,"column":4},"end":{"line":1164,"column":4}}]},"90":{"line":1188,"type":"if","locations":[{"start":{"line":1188,"column":4},"end":{"line":1188,"column":4}},{"start":{"line":1188,"column":4},"end":{"line":1188,"column":4}}]},"91":{"line":1193,"type":"if","locations":[{"start":{"line":1193,"column":4},"end":{"line":1193,"column":4}},{"start":{"line":1193,"column":4},"end":{"line":1193,"column":4}}]},"92":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}},{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}}]},"93":{"line":1222,"type":"if","locations":[{"start":{"line":1222,"column":4},"end":{"line":1222,"column":4}},{"start":{"line":1222,"column":4},"end":{"line":1222,"column":4}}]},"94":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":4},"end":{"line":1246,"column":4}},{"start":{"line":1246,"column":4},"end":{"line":1246,"column":4}}]},"95":{"line":1251,"type":"if","locations":[{"start":{"line":1251,"column":4},"end":{"line":1251,"column":4}},{"start":{"line":1251,"column":4},"end":{"line":1251,"column":4}}]},"96":{"line":1276,"type":"if","locations":[{"start":{"line":1276,"column":4},"end":{"line":1276,"column":4}},{"start":{"line":1276,"column":4},"end":{"line":1276,"column":4}}]},"97":{"line":1281,"type":"cond-expr","locations":[{"start":{"line":1281,"column":36},"end":{"line":1281,"column":68}},{"start":{"line":1281,"column":71},"end":{"line":1281,"column":91}}]},"98":{"line":1282,"type":"if","locations":[{"start":{"line":1282,"column":4},"end":{"line":1282,"column":4}},{"start":{"line":1282,"column":4},"end":{"line":1282,"column":4}}]},"99":{"line":1304,"type":"if","locations":[{"start":{"line":1304,"column":4},"end":{"line":1304,"column":4}},{"start":{"line":1304,"column":4},"end":{"line":1304,"column":4}}]},"100":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}},{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","const Raw = require('../Raw')","const Modes = require('../Modes')","","/**"," * @module Validations"," * @description List of schema validations"," * @type {Object}"," */","let Validations = exports = module.exports = {}","","/**"," * @description figures out whether value can be skipped"," * or not from validation, as non-existing values"," * should be validated using required."," * @method skippable"," * @param  {Mixed}  value"," * @return {Boolean}"," * @private"," */","const skippable = function (value) {","  return Modes.get() === 'strict' ? typeof (value) === undefined : !Raw.existy(value)","}","","/**"," * @description enforces a field to be confirmed by another."," * @method email"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.confirmed = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    const confirmedFieldValue = get(data, `${field}_confirmation`)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.same(fieldValue, confirmedFieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces a field to be an email if present"," * @method email"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.email = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.email(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces a field to be accepted"," * @method accepted"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.accepted = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.truthy(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces a field to be after a certain date"," * @method after"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.after = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.after(fieldValue, args[0])) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under validation is"," * after defined offset"," * @method afterOffsetOf"," * @param  {Object}      data"," * @param  {String}      field"," * @param  {String}      message"," * @param  {Array}      args"," * @param  {Function}      get"," * @return {Object}"," * @public"," */","Validations.afterOffsetOf = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    const offset = Number(args[0])","    const key = args[1]","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.afterOffsetOf(fieldValue, offset, key)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under validation is"," * before defined offset"," * @method beforeOffsetOf"," * @param  {Object}      data"," * @param  {String}      field"," * @param  {String}      message"," * @param  {Array}      args"," * @param  {Function}      get"," * @return {Object}"," * @public"," */","Validations.beforeOffsetOf = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    const offset = Number(args[0])","    const key = args[1]","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.beforeOffsetOf(fieldValue, offset, key)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the field under validation is a"," * valid alpha string"," * @method alpha"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.alpha = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.alpha(fieldValue) && fieldValue !== null) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the field under validation is a"," * valid alphaNumeric string"," * @method alphaNumeric"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.alphaNumeric = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.alphaNumeric(fieldValue) && fieldValue !== null) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * is a valid array"," * @method array"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.array = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.array(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * is a valid url"," * @method url"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.url = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.url(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * is a valid object"," * @method object"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.object = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.object(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * is a valid json string"," * @method json"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.json = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.json(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation is a"," * valid ip address"," * @method ip"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.ip = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.ip(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation is a"," * valid ipv4 address"," * @method ipv4"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.ipv4 = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.ipv4(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation is a"," * valid ipv6 address"," * @method ipv6"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.ipv6 = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.ipv6(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation is a"," * valid integer"," * @method integer"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.integer = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Number.isInteger(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation is"," * a boolean"," * @method boolean"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @example"," *   accepts : true,false,0,1,\"0\",\"1\""," */","Validations.boolean = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    let fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    /**","     * converting 0 and 1 strings to numbers","     */","    if (fieldValue === '0') {","      fieldValue = 0","    } else if (fieldValue === '1') {","      fieldValue = 1","    }","","    if (Raw.boolean(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation is before"," * defined date"," * @method before"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.before = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.before(fieldValue, args[0])) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation is a valid"," * date"," * @method date"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.date = function (data, field, message, args, get) {","  const formats = ['MM/DD/YYYY', 'MM-DD-YYYY', 'YYYY-MM-DD', 'YYYY/MM/DD']","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.dateFormat(fieldValue, formats)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation is a valid"," * date according to given format"," * @method dateFormat"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.dateFormat = function (data, field, message, args, get) {","  const format = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.dateFormat(fieldValue, format)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field value is under defined"," * values"," * @method in"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Boolean}"," * @public"," */","Validations.in = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (Raw.inArray(fieldValue, args)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field value is not in one"," * of the defined values"," * @method notIn"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.notIn = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","    if (!Raw.inArray(fieldValue, args)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces a field to be present and should not be"," * null or undefined"," * @method required"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @see  Raw.empty"," * @public"," */","Validations.required = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation is present when"," * conditional field value exists"," * @method requiredIf"," * @param  {Object}   data"," * @param  {String}   field"," * @param  {String}   message"," * @param  {Array}   args"," * @param  {Function}   get"," * @return {Object}"," * @public"," */","Validations.requiredIf = function (data, field, message, args, get) {","  const withField = args[0]","  return new Promise(function (resolve, reject) {","    const withFieldValue = get(data, withField)","    if (!withFieldValue) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation is present and"," * value matches to the conditional field value"," * @method requiredWhen"," * @param  {Object}   data"," * @param  {String}   field"," * @param  {String}   message"," * @param  {Array}   args"," * @param  {Function}   get"," * @return {Object}"," * @public"," */","Validations.requiredWhen = function (data, field, message, args, get) {","  const withField = args[0]","  const withfieldExpectedValue = args[1]","  return new Promise(function (resolve, reject) {","    const withFieldValue = get(data, withField)","    if (!withFieldValue || withfieldExpectedValue !== withFieldValue) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces field under validation to have data"," * when any of the other expected fields are present"," * @method requiredWithAny"," * @param  {Object}        data"," * @param  {String}        field"," * @param  {String}        message"," * @param  {Array}        args"," * @param  {Function}        get"," * @return {Object}"," * @public"," */","Validations.requiredWithAny = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    let withFieldCount = 0","","    /**","     * looping through all items to make sure","     * one of them is present","     */","    args.forEach(function (item) {","      const itemValue = get(data, item)","      if (itemValue) {","        withFieldCount++","        return","      }","    })","","    if (withFieldCount === 0) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces field under validation to have data"," * when any all of the other expected fields are present"," * @method requiredWithAll"," * @param  {Object}        data"," * @param  {String}        field"," * @param  {String}        message"," * @param  {Array}         args"," * @param  {Function}      get"," * @return {Object}"," * @public"," */","Validations.requiredWithAll = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    let withFieldsCount = 0","","    /**","     * looping through all items to make sure","     * all of them is present","     */","    args.forEach(function (item) {","      const itemValue = get(data, item)","      if (itemValue) {","        withFieldsCount++","      }","    })","","    if (withFieldsCount !== args.length) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces field under validation to have data"," * when any of the other expected fields are missing"," * @method requiredWithoutAny"," * @param  {Object}        data"," * @param  {String}        field"," * @param  {String}        message"," * @param  {Array}        args"," * @param  {Function}        get"," * @return {Object}"," * @public"," */","Validations.requiredWithoutAny = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    let withOutFieldCounts = 0","","    /**","     * looping through all items to make sure","     * one of them is present","     */","    args.forEach(function (item) {","      const itemValue = get(data, item)","      if (!itemValue) {","        withOutFieldCounts++","        return","      }","    })","","    if (withOutFieldCounts === 0) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description enforces field under validation to have data"," * when all of the other expected fields are missing"," * @method requiredWithoutAll"," * @param  {Object}        data"," * @param  {String}        field"," * @param  {String}        message"," * @param  {Array}         args"," * @param  {Function}      get"," * @return {Object}"," * @public"," */","Validations.requiredWithoutAll = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    let withOutFieldCounts = 0","","    /**","     * looping through all items to make sure","     * one of them is present","     */","    args.forEach(function (item) {","      const itemValue = get(data, item)","      if (!itemValue) {","        withOutFieldCounts++","        return","      }","    })","","    if (withOutFieldCounts !== args.length) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (!Raw.empty(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under validation"," * matches to the value of targeted field"," * @method same"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.same = function (data, field, message, args, get) {","  const targetedField = args[0]","  return new Promise(function (resolve, reject) {","    const targetedFieldValue = get(data, targetedField)","    if (!targetedFieldValue) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (targetedFieldValue === fieldValue) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under validation"," * does not matches to the value of targeted field"," * @method different"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.different = function (data, field, message, args, get) {","  const targetedField = args[0]","  return new Promise(function (resolve, reject) {","    const targetedFieldValue = get(data, targetedField)","    if (!targetedFieldValue) {","      resolve('validation skipped')","      return","    }","","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (targetedFieldValue !== fieldValue) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under"," * validation is equal to defined value"," * @method equals"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.equals = function (data, field, message, args, get) {","  const targetedValue = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (targetedValue == fieldValue) { // eslint-disable-line eqeqeq","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under"," * validation is not equal to the defined value"," * @method notEquals"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.notEquals = function (data, field, message, args, get) {","  const targetedValue = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (targetedValue !== fieldValue) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * is between a given range"," * @method range"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.range = function (data, field, message, args, get) {","  const min = args[0]","  const max = args[1]","  return new Promise(function (resolve, reject) {","    if (!min || !max) {","      return reject('min and max values are required for range validation')","    }","","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (Raw.between(fieldValue, min, max)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the length of field under"," * validation is greater than defined length."," * @method min"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.min = function (data, field, message, args, get) {","  const minLength = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (String(fieldValue).length >= minLength) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the length of field under"," * validation is less than defined length."," * @method max"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.max = function (data, field, message, args, get) {","  const maxLength = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (String(fieldValue).length <= maxLength) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under"," * validation is greater than defined value."," * @method above"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.above = function (data, field, message, args, get) {","  const minValue = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (Number(fieldValue) > minValue) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure the value of field under"," * validation is less than defined value."," * @method under"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.under = function (data, field, message, args, get) {","  const maxValue = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (Number(fieldValue) < maxValue) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation contains a"," * given substring"," * @method includes"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.includes = function (data, field, message, args, get) {","  const substring = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (String(fieldValue).includes(substring)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * starts with given substring"," * @method startsWith"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.startsWith = function (data, field, message, args, get) {","  const substring = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (String(fieldValue).startsWith(substring)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure value of field under validation"," * ends with given substring"," * @method endsWith"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.endsWith = function (data, field, message, args, get) {","  const substring = args[0]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (String(fieldValue).endsWith(substring)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation satifies defined"," * regex"," * @method regex"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.regex = function (data, field, message, args, get) {","  const regexExp = args[0]","  const regexFlags = args[1]","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    const expression = regexFlags ? new RegExp(regexExp, regexFlags) : new RegExp(regexExp)","    if (Raw.regex(fieldValue, expression)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * @description makes sure field under validation is a string"," * @method regex"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} message"," * @param  {Array} args"," * @param  {Function} get"," * @return {Object}"," * @public"," */","Validations.string = function (data, field, message, args, get) {","  return new Promise(function (resolve, reject) {","    const fieldValue = get(data, field)","    if (skippable(fieldValue)) {","      resolve('validation skipped')","      return","    }","","    if (Raw.string(fieldValue)) {","      resolve('validation passed')","      return","    }","    reject(message)","  })","}","","/**"," * aliases"," */","Validations.between = Validations.range",""],"l":{"11":1,"12":1,"19":1,"30":1,"31":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"83":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"105":0,"106":0,"107":0,"109":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"135":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"162":0,"164":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"189":0,"190":0,"191":0,"193":0,"209":1,"210":0,"211":0,"212":0,"213":0,"214":0,"216":0,"217":0,"218":0,"220":0,"236":1,"237":0,"238":0,"239":0,"240":0,"241":0,"243":0,"244":0,"245":0,"247":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"270":0,"271":0,"272":0,"274":0,"290":1,"291":0,"292":0,"293":0,"294":0,"295":0,"297":0,"298":0,"299":0,"301":0,"317":1,"318":0,"319":0,"320":0,"321":0,"322":0,"324":0,"325":0,"326":0,"328":0,"344":1,"345":0,"346":0,"347":0,"348":0,"349":0,"351":0,"352":0,"353":0,"355":0,"371":1,"372":0,"373":0,"374":0,"375":0,"376":0,"378":0,"379":0,"380":0,"382":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"405":0,"406":0,"407":0,"409":0,"425":1,"426":0,"427":0,"428":0,"429":0,"430":0,"432":0,"433":0,"434":0,"436":0,"452":1,"453":0,"454":0,"455":0,"456":0,"457":0,"459":0,"460":0,"461":0,"463":0,"480":1,"481":0,"482":0,"483":0,"484":0,"485":0,"491":0,"492":0,"493":0,"494":0,"497":0,"498":0,"499":0,"501":0,"517":1,"518":0,"519":0,"520":0,"521":0,"522":0,"524":0,"525":0,"526":0,"528":0,"544":1,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"552":0,"553":0,"554":0,"556":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"580":0,"581":0,"582":0,"584":0,"600":1,"601":0,"602":0,"603":0,"604":0,"605":0,"607":0,"608":0,"609":0,"611":0,"627":1,"628":0,"629":0,"630":0,"631":0,"632":0,"634":0,"635":0,"636":0,"638":0,"655":1,"656":0,"657":0,"658":0,"659":0,"660":0,"662":0,"678":1,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"687":0,"688":0,"689":0,"690":0,"692":0,"708":1,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"718":0,"719":0,"720":0,"721":0,"723":0,"739":1,"740":0,"741":0,"747":0,"748":0,"749":0,"750":0,"751":0,"755":0,"756":0,"757":0,"760":0,"761":0,"762":0,"763":0,"765":0,"781":1,"782":0,"783":0,"789":0,"790":0,"791":0,"792":0,"796":0,"797":0,"798":0,"801":0,"802":0,"803":0,"804":0,"806":0,"822":1,"823":0,"824":0,"830":0,"831":0,"832":0,"833":0,"834":0,"838":0,"839":0,"840":0,"843":0,"844":0,"845":0,"846":0,"848":0,"864":1,"865":0,"866":0,"872":0,"873":0,"874":0,"875":0,"876":0,"880":0,"881":0,"882":0,"885":0,"886":0,"887":0,"888":0,"890":0,"906":1,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"915":0,"916":0,"917":0,"918":0,"921":0,"922":0,"923":0,"925":0,"941":1,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"950":0,"951":0,"952":0,"953":0,"956":0,"957":0,"958":0,"960":0,"976":1,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"985":0,"986":0,"987":0,"989":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1014":0,"1015":0,"1016":0,"1018":0,"1034":1,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1042":0,"1043":0,"1044":0,"1045":0,"1048":0,"1049":0,"1050":0,"1052":0,"1068":1,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1077":0,"1078":0,"1079":0,"1081":0,"1097":1,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1106":0,"1107":0,"1108":0,"1110":0,"1126":1,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1135":0,"1136":0,"1137":0,"1139":0,"1155":1,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1164":0,"1165":0,"1166":0,"1168":0,"1184":1,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1193":0,"1194":0,"1195":0,"1197":0,"1213":1,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1222":0,"1223":0,"1224":0,"1226":0,"1242":1,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1251":0,"1252":0,"1253":0,"1255":0,"1271":1,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1281":0,"1282":0,"1283":0,"1284":0,"1286":0,"1301":1,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1309":0,"1310":0,"1311":0,"1313":0,"1320":1}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Raw/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Raw/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":0,"66":1,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":1,"83":0,"84":1,"85":0,"86":1,"87":0,"88":1,"89":0,"90":1,"91":0,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":1,"129":0,"130":1,"131":0,"132":1,"133":0,"134":1,"135":0,"136":0,"137":1,"138":0,"139":0,"140":1,"141":0,"142":1,"143":0,"144":0,"145":1,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":29}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":14},"end":{"line":48,"column":31}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":11},"end":{"line":69,"column":36}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":15},"end":{"line":85,"column":32}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":11},"end":{"line":97,"column":28}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":13},"end":{"line":109,"column":30}}},"7":{"name":"(anonymous_7)","line":121,"loc":{"start":{"line":121,"column":13},"end":{"line":121,"column":30}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":11},"end":{"line":133,"column":28}}},"9":{"name":"(anonymous_9)","line":150,"loc":{"start":{"line":150,"column":13},"end":{"line":150,"column":30}}},"10":{"name":"(anonymous_10)","line":163,"loc":{"start":{"line":163,"column":15},"end":{"line":163,"column":49}}},"11":{"name":"(anonymous_11)","line":179,"loc":{"start":{"line":179,"column":13},"end":{"line":179,"column":30}}},"12":{"name":"(anonymous_12)","line":198,"loc":{"start":{"line":198,"column":13},"end":{"line":198,"column":30}}},"13":{"name":"(anonymous_13)","line":210,"loc":{"start":{"line":210,"column":12},"end":{"line":210,"column":29}}},"14":{"name":"(anonymous_14)","line":227,"loc":{"start":{"line":227,"column":12},"end":{"line":227,"column":29}}},"15":{"name":"(anonymous_15)","line":254,"loc":{"start":{"line":254,"column":12},"end":{"line":254,"column":36}}},"16":{"name":"(anonymous_16)","line":271,"loc":{"start":{"line":271,"column":10},"end":{"line":271,"column":27}}},"17":{"name":"(anonymous_17)","line":283,"loc":{"start":{"line":283,"column":12},"end":{"line":283,"column":29}}},"18":{"name":"(anonymous_18)","line":300,"loc":{"start":{"line":300,"column":12},"end":{"line":300,"column":29}}},"19":{"name":"(anonymous_19)","line":320,"loc":{"start":{"line":320,"column":17},"end":{"line":320,"column":34}}},"20":{"name":"(anonymous_20)","line":333,"loc":{"start":{"line":333,"column":12},"end":{"line":333,"column":29}}},"21":{"name":"(anonymous_21)","line":345,"loc":{"start":{"line":345,"column":19},"end":{"line":345,"column":36}}},"22":{"name":"(anonymous_22)","line":360,"loc":{"start":{"line":360,"column":18},"end":{"line":360,"column":35}}},"23":{"name":"(anonymous_23)","line":376,"loc":{"start":{"line":376,"column":11},"end":{"line":376,"column":28}}},"24":{"name":"(anonymous_24)","line":388,"loc":{"start":{"line":388,"column":11},"end":{"line":388,"column":28}}},"25":{"name":"(anonymous_25)","line":400,"loc":{"start":{"line":400,"column":9},"end":{"line":400,"column":26}}},"26":{"name":"(anonymous_26)","line":412,"loc":{"start":{"line":412,"column":11},"end":{"line":412,"column":45}}},"27":{"name":"(anonymous_27)","line":424,"loc":{"start":{"line":424,"column":11},"end":{"line":424,"column":28}}},"28":{"name":"(anonymous_28)","line":436,"loc":{"start":{"line":436,"column":10},"end":{"line":436,"column":27}}},"29":{"name":"(anonymous_29)","line":447,"loc":{"start":{"line":447,"column":15},"end":{"line":447,"column":32}}},"30":{"name":"(anonymous_30)","line":458,"loc":{"start":{"line":458,"column":15},"end":{"line":458,"column":32}}},"31":{"name":"(anonymous_31)","line":471,"loc":{"start":{"line":471,"column":12},"end":{"line":471,"column":46}}},"32":{"name":"(anonymous_32)","line":484,"loc":{"start":{"line":484,"column":12},"end":{"line":484,"column":46}}},"33":{"name":"(anonymous_33)","line":498,"loc":{"start":{"line":498,"column":14},"end":{"line":498,"column":41}}},"34":{"name":"(anonymous_34)","line":512,"loc":{"start":{"line":512,"column":14},"end":{"line":512,"column":48}}},"35":{"name":"(anonymous_35)","line":527,"loc":{"start":{"line":527,"column":13},"end":{"line":527,"column":30}}},"36":{"name":"(anonymous_36)","line":533,"loc":{"start":{"line":533,"column":13},"end":{"line":533,"column":29}}},"37":{"name":"(anonymous_37)","line":554,"loc":{"start":{"line":554,"column":12},"end":{"line":554,"column":29}}},"38":{"name":"(anonymous_38)","line":572,"loc":{"start":{"line":572,"column":16},"end":{"line":572,"column":33}}},"39":{"name":"(anonymous_39)","line":590,"loc":{"start":{"line":590,"column":15},"end":{"line":590,"column":32}}},"40":{"name":"(anonymous_40)","line":607,"loc":{"start":{"line":607,"column":11},"end":{"line":607,"column":28}}},"41":{"name":"(anonymous_41)","line":622,"loc":{"start":{"line":622,"column":13},"end":{"line":622,"column":30}}},"42":{"name":"(anonymous_42)","line":638,"loc":{"start":{"line":638,"column":12},"end":{"line":638,"column":40}}},"43":{"name":"(anonymous_43)","line":663,"loc":{"start":{"line":663,"column":20},"end":{"line":663,"column":50}}},"44":{"name":"(anonymous_44)","line":689,"loc":{"start":{"line":689,"column":21},"end":{"line":689,"column":51}}},"45":{"name":"(anonymous_45)","line":706,"loc":{"start":{"line":706,"column":13},"end":{"line":706,"column":42}}},"46":{"name":"(anonymous_46)","line":723,"loc":{"start":{"line":723,"column":17},"end":{"line":723,"column":51}}},"47":{"name":"(anonymous_47)","line":741,"loc":{"start":{"line":741,"column":18},"end":{"line":741,"column":53}}},"48":{"name":"(anonymous_48)","line":753,"loc":{"start":{"line":753,"column":19},"end":{"line":753,"column":55}}},"49":{"name":"(anonymous_49)","line":762,"loc":{"start":{"line":762,"column":15},"end":{"line":762,"column":28}}},"50":{"name":"(anonymous_50)","line":779,"loc":{"start":{"line":779,"column":19},"end":{"line":779,"column":55}}},"51":{"name":"(anonymous_51)","line":788,"loc":{"start":{"line":788,"column":15},"end":{"line":788,"column":28}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":112}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":117}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":50}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":173}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":135}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":84}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"11":{"start":{"line":36,"column":0},"end":{"line":38,"column":1}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":31}},"13":{"start":{"line":48,"column":0},"end":{"line":55,"column":1}},"14":{"start":{"line":49,"column":2},"end":{"line":53,"column":3}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":17}},"16":{"start":{"line":51,"column":9},"end":{"line":53,"column":3}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":37}},"19":{"start":{"line":69,"column":0},"end":{"line":75,"column":1}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":46}},"21":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"22":{"start":{"line":72,"column":4},"end":{"line":72,"column":56}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":23}},"24":{"start":{"line":85,"column":0},"end":{"line":87,"column":1}},"25":{"start":{"line":86,"column":2},"end":{"line":86,"column":38}},"26":{"start":{"line":97,"column":0},"end":{"line":99,"column":1}},"27":{"start":{"line":98,"column":2},"end":{"line":98,"column":23}},"28":{"start":{"line":109,"column":0},"end":{"line":111,"column":1}},"29":{"start":{"line":110,"column":2},"end":{"line":110,"column":36}},"30":{"start":{"line":121,"column":0},"end":{"line":123,"column":1}},"31":{"start":{"line":122,"column":2},"end":{"line":122,"column":53}},"32":{"start":{"line":133,"column":0},"end":{"line":140,"column":1}},"33":{"start":{"line":134,"column":2},"end":{"line":139,"column":3}},"34":{"start":{"line":135,"column":4},"end":{"line":135,"column":21}},"35":{"start":{"line":136,"column":4},"end":{"line":136,"column":15}},"36":{"start":{"line":138,"column":4},"end":{"line":138,"column":16}},"37":{"start":{"line":150,"column":0},"end":{"line":152,"column":1}},"38":{"start":{"line":151,"column":2},"end":{"line":151,"column":36}},"39":{"start":{"line":163,"column":0},"end":{"line":165,"column":1}},"40":{"start":{"line":164,"column":2},"end":{"line":164,"column":52}},"41":{"start":{"line":179,"column":0},"end":{"line":184,"column":1}},"42":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"43":{"start":{"line":181,"column":4},"end":{"line":181,"column":27}},"44":{"start":{"line":183,"column":2},"end":{"line":183,"column":48}},"45":{"start":{"line":198,"column":0},"end":{"line":200,"column":1}},"46":{"start":{"line":199,"column":2},"end":{"line":199,"column":60}},"47":{"start":{"line":210,"column":0},"end":{"line":212,"column":1}},"48":{"start":{"line":211,"column":2},"end":{"line":211,"column":27}},"49":{"start":{"line":227,"column":0},"end":{"line":244,"column":1}},"50":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"51":{"start":{"line":229,"column":4},"end":{"line":229,"column":15}},"52":{"start":{"line":232,"column":2},"end":{"line":234,"column":3}},"53":{"start":{"line":233,"column":4},"end":{"line":233,"column":16}},"54":{"start":{"line":236,"column":2},"end":{"line":236,"column":29}},"55":{"start":{"line":238,"column":2},"end":{"line":243,"column":3}},"56":{"start":{"line":240,"column":6},"end":{"line":240,"column":44}},"57":{"start":{"line":242,"column":6},"end":{"line":242,"column":31}},"58":{"start":{"line":254,"column":0},"end":{"line":256,"column":1}},"59":{"start":{"line":255,"column":2},"end":{"line":255,"column":26}},"60":{"start":{"line":271,"column":0},"end":{"line":273,"column":1}},"61":{"start":{"line":272,"column":2},"end":{"line":272,"column":35}},"62":{"start":{"line":283,"column":0},"end":{"line":285,"column":1}},"63":{"start":{"line":284,"column":2},"end":{"line":284,"column":37}},"64":{"start":{"line":300,"column":0},"end":{"line":302,"column":1}},"65":{"start":{"line":301,"column":2},"end":{"line":301,"column":37}},"66":{"start":{"line":320,"column":0},"end":{"line":323,"column":1}},"67":{"start":{"line":321,"column":2},"end":{"line":321,"column":33}},"68":{"start":{"line":322,"column":2},"end":{"line":322,"column":42}},"69":{"start":{"line":333,"column":0},"end":{"line":335,"column":1}},"70":{"start":{"line":334,"column":2},"end":{"line":334,"column":37}},"71":{"start":{"line":345,"column":0},"end":{"line":347,"column":1}},"72":{"start":{"line":346,"column":2},"end":{"line":346,"column":44}},"73":{"start":{"line":360,"column":0},"end":{"line":366,"column":1}},"74":{"start":{"line":361,"column":2},"end":{"line":361,"column":61}},"75":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"76":{"start":{"line":363,"column":4},"end":{"line":363,"column":15}},"77":{"start":{"line":365,"column":2},"end":{"line":365,"column":59}},"78":{"start":{"line":376,"column":0},"end":{"line":378,"column":1}},"79":{"start":{"line":377,"column":2},"end":{"line":377,"column":36}},"80":{"start":{"line":388,"column":0},"end":{"line":390,"column":1}},"81":{"start":{"line":389,"column":2},"end":{"line":389,"column":36}},"82":{"start":{"line":400,"column":0},"end":{"line":402,"column":1}},"83":{"start":{"line":401,"column":2},"end":{"line":401,"column":43}},"84":{"start":{"line":412,"column":0},"end":{"line":414,"column":1}},"85":{"start":{"line":413,"column":2},"end":{"line":413,"column":34}},"86":{"start":{"line":424,"column":0},"end":{"line":426,"column":1}},"87":{"start":{"line":425,"column":2},"end":{"line":425,"column":32}},"88":{"start":{"line":436,"column":0},"end":{"line":438,"column":1}},"89":{"start":{"line":437,"column":2},"end":{"line":437,"column":25}},"90":{"start":{"line":447,"column":0},"end":{"line":449,"column":1}},"91":{"start":{"line":448,"column":2},"end":{"line":448,"column":27}},"92":{"start":{"line":458,"column":0},"end":{"line":460,"column":1}},"93":{"start":{"line":459,"column":2},"end":{"line":459,"column":29}},"94":{"start":{"line":471,"column":0},"end":{"line":473,"column":1}},"95":{"start":{"line":472,"column":2},"end":{"line":472,"column":48}},"96":{"start":{"line":484,"column":0},"end":{"line":486,"column":1}},"97":{"start":{"line":485,"column":2},"end":{"line":485,"column":43}},"98":{"start":{"line":498,"column":0},"end":{"line":501,"column":1}},"99":{"start":{"line":499,"column":2},"end":{"line":499,"column":23}},"100":{"start":{"line":500,"column":2},"end":{"line":500,"column":55}},"101":{"start":{"line":512,"column":0},"end":{"line":518,"column":1}},"102":{"start":{"line":513,"column":2},"end":{"line":513,"column":58}},"103":{"start":{"line":514,"column":2},"end":{"line":516,"column":3}},"104":{"start":{"line":515,"column":4},"end":{"line":515,"column":16}},"105":{"start":{"line":517,"column":2},"end":{"line":517,"column":44}},"106":{"start":{"line":527,"column":0},"end":{"line":540,"column":1}},"107":{"start":{"line":528,"column":2},"end":{"line":528,"column":48}},"108":{"start":{"line":529,"column":2},"end":{"line":529,"column":19}},"109":{"start":{"line":530,"column":2},"end":{"line":532,"column":3}},"110":{"start":{"line":531,"column":4},"end":{"line":531,"column":16}},"111":{"start":{"line":533,"column":2},"end":{"line":538,"column":4}},"112":{"start":{"line":534,"column":4},"end":{"line":537,"column":5}},"113":{"start":{"line":535,"column":6},"end":{"line":535,"column":17}},"114":{"start":{"line":536,"column":6},"end":{"line":536,"column":12}},"115":{"start":{"line":539,"column":2},"end":{"line":539,"column":24}},"116":{"start":{"line":554,"column":0},"end":{"line":558,"column":1}},"117":{"start":{"line":555,"column":2},"end":{"line":555,"column":45}},"118":{"start":{"line":556,"column":2},"end":{"line":556,"column":54}},"119":{"start":{"line":557,"column":2},"end":{"line":557,"column":28}},"120":{"start":{"line":572,"column":0},"end":{"line":576,"column":1}},"121":{"start":{"line":573,"column":2},"end":{"line":573,"column":69}},"122":{"start":{"line":574,"column":2},"end":{"line":574,"column":54}},"123":{"start":{"line":575,"column":2},"end":{"line":575,"column":32}},"124":{"start":{"line":590,"column":0},"end":{"line":594,"column":1}},"125":{"start":{"line":591,"column":2},"end":{"line":591,"column":63}},"126":{"start":{"line":592,"column":2},"end":{"line":592,"column":54}},"127":{"start":{"line":593,"column":2},"end":{"line":593,"column":31}},"128":{"start":{"line":607,"column":0},"end":{"line":609,"column":1}},"129":{"start":{"line":608,"column":2},"end":{"line":608,"column":40}},"130":{"start":{"line":622,"column":0},"end":{"line":624,"column":1}},"131":{"start":{"line":623,"column":2},"end":{"line":623,"column":25}},"132":{"start":{"line":638,"column":0},"end":{"line":640,"column":1}},"133":{"start":{"line":639,"column":2},"end":{"line":639,"column":41}},"134":{"start":{"line":663,"column":0},"end":{"line":666,"column":1}},"135":{"start":{"line":664,"column":2},"end":{"line":664,"column":45}},"136":{"start":{"line":665,"column":2},"end":{"line":665,"column":41}},"137":{"start":{"line":689,"column":0},"end":{"line":692,"column":1}},"138":{"start":{"line":690,"column":2},"end":{"line":690,"column":51}},"139":{"start":{"line":691,"column":2},"end":{"line":691,"column":43}},"140":{"start":{"line":706,"column":0},"end":{"line":708,"column":1}},"141":{"start":{"line":707,"column":2},"end":{"line":707,"column":43}},"142":{"start":{"line":723,"column":0},"end":{"line":726,"column":1}},"143":{"start":{"line":724,"column":2},"end":{"line":724,"column":25}},"144":{"start":{"line":725,"column":2},"end":{"line":725,"column":55}},"145":{"start":{"line":741,"column":0},"end":{"line":743,"column":1}},"146":{"start":{"line":742,"column":2},"end":{"line":742,"column":50}},"147":{"start":{"line":753,"column":0},"end":{"line":769,"column":1}},"148":{"start":{"line":754,"column":2},"end":{"line":754,"column":48}},"149":{"start":{"line":755,"column":2},"end":{"line":755,"column":72}},"150":{"start":{"line":756,"column":2},"end":{"line":756,"column":22}},"151":{"start":{"line":758,"column":2},"end":{"line":760,"column":3}},"152":{"start":{"line":759,"column":4},"end":{"line":759,"column":16}},"153":{"start":{"line":762,"column":2},"end":{"line":767,"column":4}},"154":{"start":{"line":763,"column":4},"end":{"line":766,"column":5}},"155":{"start":{"line":764,"column":6},"end":{"line":764,"column":20}},"156":{"start":{"line":765,"column":6},"end":{"line":765,"column":12}},"157":{"start":{"line":768,"column":2},"end":{"line":768,"column":25}},"158":{"start":{"line":779,"column":0},"end":{"line":795,"column":1}},"159":{"start":{"line":780,"column":2},"end":{"line":780,"column":48}},"160":{"start":{"line":781,"column":2},"end":{"line":781,"column":72}},"161":{"start":{"line":782,"column":2},"end":{"line":782,"column":22}},"162":{"start":{"line":784,"column":2},"end":{"line":786,"column":3}},"163":{"start":{"line":785,"column":4},"end":{"line":785,"column":16}},"164":{"start":{"line":788,"column":2},"end":{"line":792,"column":4}},"165":{"start":{"line":789,"column":4},"end":{"line":791,"column":5}},"166":{"start":{"line":790,"column":6},"end":{"line":790,"column":20}},"167":{"start":{"line":794,"column":2},"end":{"line":794,"column":38}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":9}},{"start":{"line":51,"column":9},"end":{"line":51,"column":9}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":21}},{"start":{"line":71,"column":25},"end":{"line":71,"column":32}}]},"5":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":9},"end":{"line":122,"column":32}},{"start":{"line":122,"column":36},"end":{"line":122,"column":53}}]},"6":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"7":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":10},"end":{"line":183,"column":24}},{"start":{"line":183,"column":28},"end":{"line":183,"column":47}}]},"8":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":9},"end":{"line":199,"column":26}},{"start":{"line":199,"column":30},"end":{"line":199,"column":45}},{"start":{"line":199,"column":49},"end":{"line":199,"column":60}}]},"9":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]},"10":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]},"11":{"line":238,"type":"switch","locations":[{"start":{"line":239,"column":4},"end":{"line":240,"column":44}},{"start":{"line":241,"column":4},"end":{"line":242,"column":31}}]},"12":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"13":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":9},"end":{"line":401,"column":24}},{"start":{"line":401,"column":28},"end":{"line":401,"column":43}}]},"14":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":10},"end":{"line":500,"column":29}},{"start":{"line":500,"column":35},"end":{"line":500,"column":54}}]},"15":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"16":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":530,"column":2}},{"start":{"line":530,"column":2},"end":{"line":530,"column":2}}]},"17":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":4},"end":{"line":534,"column":4}},{"start":{"line":534,"column":4},"end":{"line":534,"column":4}}]},"18":{"line":724,"type":"binary-expr","locations":[{"start":{"line":724,"column":11},"end":{"line":724,"column":17}},{"start":{"line":724,"column":21},"end":{"line":724,"column":25}}]},"19":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":2},"end":{"line":758,"column":2}},{"start":{"line":758,"column":2},"end":{"line":758,"column":2}}]},"20":{"line":758,"type":"binary-expr","locations":[{"start":{"line":758,"column":6},"end":{"line":758,"column":22}},{"start":{"line":758,"column":26},"end":{"line":758,"column":54}}]},"21":{"line":763,"type":"if","locations":[{"start":{"line":763,"column":4},"end":{"line":763,"column":4}},{"start":{"line":763,"column":4},"end":{"line":763,"column":4}}]},"22":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":2},"end":{"line":784,"column":2}},{"start":{"line":784,"column":2},"end":{"line":784,"column":2}}]},"23":{"line":784,"type":"binary-expr","locations":[{"start":{"line":784,"column":6},"end":{"line":784,"column":22}},{"start":{"line":784,"column":26},"end":{"line":784,"column":54}}]},"24":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":4},"end":{"line":789,"column":4}},{"start":{"line":789,"column":4},"end":{"line":789,"column":4}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","const moment = require('moment')","","/**"," * list of creepy regex, no they work nice"," */","const urlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/i","const emailRegex = /^([\\w-]+(?:\\.[\\w-]+)*)(\\+[\\w\\.-]+)?@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,63}(?:\\.[a-z]{2})?)$/i","const phoneRegex = /\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/","const creditCardRegex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$/","const alphaNumericRegex = /^[a-z0-9]+$/i","const alphaRegex = /^[a-z]+$/i","const ipv4Regex = /^(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}$/","const ipv6Regex = /^(?:(?:[0-9a-fA-F:]){1,4}(?:(?::(?:[0-9a-fA-F]){1,4}|:)){2,7})+$/","","let Raw = exports = module.exports = {}","","/**"," * @description tells whether input is a valid"," * array or not"," * @method array"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.array = function (input) {","  return input instanceof Array","}","","/**"," * @description tells whether input is a valid"," * boolean or not"," * @method boolean"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.boolean = function (input) {","  if (input === 0) {","    input = false","  } else if (input === 1) {","    input = true","  }","  return typeof (input) === 'boolean'","}","","/**"," * @description tells whether input is a valid"," * date or not"," * @method date"," * @param  {Mixed} input"," * @param  {Boolean} strict"," * @return {Boolean}"," * @example"," *   date(new Date())"," *   date(\"2015-11-30\") strict needs to be disabled"," * @public"," */","Raw.date = function (input, strict) {","  const isDateInstance = input instanceof Date","  if (!isDateInstance && !strict) {","    return new Date(input).toString() !== 'Invalid Date'","  }","  return isDateInstance","}","","/**"," * @description tells whether input is a valid function"," * or not"," * @method function"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.function = function (input) {","  return typeof (input) === 'function'","}","","/**"," * @description tells whether input is null"," * or not"," * @method null"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.null = function (input) {","  return input === null","}","","/**"," * @description tells type of input is"," * a valid number or not"," * @method number"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.number = function (input) {","  return typeof (input) === 'number'","}","","/**"," * @description tells whether input is a valid"," * object or not"," * @method object"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.object = function (input) {","  return input instanceof Object && !Raw.array(input)","}","","/**"," * @description tells whether input is a valid"," * JSON string or not"," * @method json"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.json = function (input) {","  try {","    JSON.parse(input)","    return true","  } catch (e) {","    return false","  }","}","","/**"," * @description tells whether input is of type"," * string or not"," * @method string"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.string = function (input) {","  return typeof (input) === 'string'","}","","/**"," * @description matches 2 input are of same type or"," * not"," * @method sameType"," * @param  {Mixed} input"," * @param  {Mixed} comparsionInput"," * @return {Boolean}"," * @public"," */","Raw.sameType = function (input, comparsionInput) {","  return typeof (input) === typeof (comparsionInput)","}","","/**"," * @description tells whether input exists or not"," * @method existy"," * @param  {Mixed} input"," * @return {Boolean}"," * @example"," *   Following returns to false"," *   null"," *   undefined"," *   Empty string"," *  @public"," */","Raw.existy = function (input) {","  if (typeof (input) === 'string') {","    return input.length > 0","  }","  return (input !== null && input !== undefined)","}","","/**"," * @description tells whether input is truthy or"," * not"," * @method truthy"," * @param  {Mixed} input"," * @return {Boolean}"," * @example"," *   exists need to true"," *   not false"," *   not 0"," *  @public"," */","Raw.truthy = function (input) {","  return Raw.existy(input) && input !== false && input !== 0","}","","/**"," * @description tells whether input is falsy or not, opposite"," * of truthy"," * @method falsy"," * @param  {Mixed} input"," * @return {Boolean}"," * @public"," */","Raw.falsy = function (input) {","  return !Raw.truthy(input)","}","","/**"," * @description tells whether input is empty or not"," * @method empty"," * @param  {Mixed} input"," * @return {Boolean}"," * @example"," *   Following yield to true"," *    empty({})"," *    empty([])"," *    empty('')"," *    empty(null)"," *    empty(undefined)"," */","Raw.empty = function (input) {","  if (!Raw.existy(input)) {","    return true","  }","","  if (Raw.date(input)) {","    return false","  }","","  const type = typeof (input)","","  switch (type) {","    case 'object' :","      return Object.keys(input).length === 0","    case 'string' :","      return input.length === 0","  }","}","","/**"," * @description executes a given regex on a given input"," * @method regex"," * @param  {String} input"," * @param  {Regex} regex"," * @return {Boolean}"," * @public"," */","Raw.regex = function (input, regex) {","  return regex.test(input)","}","","/**"," * @description tells whether given input is a valid url"," * or not"," * @method url"," * @param  {String} input"," * @return {Boolean}"," * @example"," *   Following yields to true"," *   http://foo.com"," *   https://foo.com"," *   http://foo.co.in"," *  @public"," */","Raw.url = function (input) {","  return Raw.regex(input, urlRegex)","}","","/**"," * @description tells whether given input is a valid email"," * address or not"," * @method email"," * @param  {String} input"," * @return {Boolean}"," * @public"," */","Raw.email = function (input) {","  return Raw.regex(input, emailRegex)","}","","/**"," * @description tells whether given input is a valid phone"," * number or not"," * @method phone"," * @param  {Number} input"," * @return {Boolean}"," * @example"," *   Following yield to true"," *   1235554567"," *   444-555-1234"," *   246.555.8888"," * @public"," */","Raw.phone = function (input) {","  return Raw.regex(input, phoneRegex)","}","","/**"," * @description tells whether input is a valid credit card"," * number or not"," * @method creditCard"," * @param  {String}   input"," * @return {Boolean}"," * @example"," *   Works for"," *   Visa"," *   MasterCard"," *   American Express"," *   Diners Club"," *   Discover"," *   JCB"," *  @public"," */","Raw.creditCard = function (input) {","  input = input.replace(/-/g, '')","  return Raw.regex(input, creditCardRegex)","}","","/**"," * @description makes sure given field contains"," * letters only"," * @method alpha"," * @param  {String} input"," * @return {Boolean}"," * @public"," */","Raw.alpha = function (input) {","  return Raw.regex(input, alphaRegex)","}","","/**"," * @description tells whether input is a valid alpha numeric"," * string or not"," * @method alphaNumeric"," * @param  {String|Number}     input"," * @return {Boolean}"," * @public"," */","Raw.alphaNumeric = function (input) {","  return Raw.regex(input, alphaNumericRegex)","}","","/**"," * @description tells whether input is affirmative or"," * not"," * @method affirmative"," * @param  {String}    input"," * @return {Boolean}"," * @example"," *   Following yields true"," *   yes, true, y, ok, okay, A"," *  @public"," */","Raw.affirmative = function (input) {","  const affirmativeArray = ['yes', 'true', 'y', 'ok', 'okay']","  if (input === 'A') {","    return true","  }","  return affirmativeArray.indexOf(input.toLowerCase()) > -1","}","","/**"," * @description tells whether ip address is a valid ipv4 ip"," * address"," * @method ipv4"," * @param  {String} input"," * @return {Boolean}"," * @public"," */","Raw.ipv4 = function (input) {","  return Raw.regex(input, ipv4Regex)","}","","/**"," * @description tells whether ip address is a valid ipv6 ip"," * address"," * @method ipv6"," * @param  {String} input"," * @return {Boolean}"," * @public"," */","Raw.ipv6 = function (input) {","  return Raw.regex(input, ipv6Regex)","}","","/**"," * @description tells whether ip address is a valid ipv4 or"," * ipv6 ip address"," * @method ip"," * @param  {String} input"," * @return {Boolean}"," * @public"," */","Raw.ip = function (input) {","  return Raw.ipv4(input) || Raw.ipv6(input)","}","","/**"," * @description tells whether 2 values are identically same"," * @method same"," * @param  {Mixed} input"," * @param  {Mixed} comparsionInput"," * @return {Boolean}"," * @public"," */","Raw.same = function (input, comparsionInput) {","  return input === comparsionInput","}","","/**"," * @description tells whether input is a even number or"," * not"," * @method even"," * @param  {Number} input"," * @return {Boolean}"," * @public"," */","Raw.even = function (input) {","  return Number(input) % 2 === 0","}","","/**"," * @description tells whether input is a odd number or"," * not"," * @method odd"," * @param  {Number} input"," * @return {Boolean}"," * @public"," */","Raw.odd = function (input) {","  return !Raw.even(input)","}","","/**"," * @description tells whether input is a positive number or not"," * @method positive"," * @param  {Number} input"," * @return {Boolean}"," * @public"," */","Raw.positive = function (input) {","  return Number(input) >= 0","}","","/**"," * @description tells whether input is a negative number or not"," * @method negative"," * @param  {Number} input"," * @return {Boolean}"," * @public"," */","Raw.negative = function (input) {","  return !Raw.positive(input)","}","","/**"," * @description tells whether input is above comparison"," * input"," * @method above"," * @param  {Number} input"," * @param  {Number} comparsionInput"," * @return {Boolean}"," * @public"," */","Raw.above = function (input, comparsionInput) {","  return Number(input) > Number(comparsionInput)","}","","/**"," * @description tells whether input is under comparison"," * input"," * @method under"," * @param  {Number} input"," * @param  {Number} comparsionInput"," * @return {Boolean}"," * @public"," */","Raw.under = function (input, comparsionInput) {","  return !Raw.above(input, comparsionInput)","}","","/**"," * @description tells whether a value lies between 2 values"," * or not"," * @method between"," * @param  {Number} input"," * @param  {Number} min"," * @param  {Number} max"," * @return {Boolean}"," * @public"," */","Raw.between = function (input, min, max) {","  input = Number(input)","  return (input > Number(min)) && (input < Number(max))","}","","/**"," * @description tells whether a value lies in an array or"," * not"," * @method inArray"," * @param  {String} input"," * @param  {Array} comparsionArray"," * @return {Boolean}"," * @public"," */","Raw.inArray = function (input, comparsionArray) {","  const isArrayInstance = comparsionArray instanceof Array","  if (!isArrayInstance) {","    return false","  }","  return comparsionArray.indexOf(input) > -1","}","","/**"," * @description tells whether an array is sorted or not"," * @method sorted"," * @param  {Array} input"," * @return {Boolean}"," * @public"," */","Raw.sorted = function (input) {","  const isArrayInstance = input instanceof Array","  let downScale = 0","  if (!isArrayInstance) {","    return false","  }","  input.sort(function (a, b) {","    if (a > b) {","      downScale++","      return","    }","  })","  return downScale === 0","}","","/**"," * @description tells whether input date is a valid date"," * is today or not"," * @method today"," * @param  {String|Object} input"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.today = function (input) {","  const today = moment().format('YYYY-MM-DD')","  const inputDate = moment(input).format('YYYY-MM-DD')","  return inputDate === today","}","","/**"," * @description tells whether input date is a valid date"," * from yesterday or not"," * @method yesterday"," * @param  {String|Object}  input"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.yesterday = function (input) {","  const yesterday = moment().subtract(1, 'days').format('YYYY-MM-DD')","  const inputDate = moment(input).format('YYYY-MM-DD')","  return inputDate === yesterday","}","","/**"," * @description tells whether input date is a valid date"," * to tomorrow or not"," * @method tomorrow"," * @param  {String|Object}  input"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.tomorrow = function (input) {","  const tomorrow = moment().add(1, 'days').format('YYYY-MM-DD')","  const inputDate = moment(input).format('YYYY-MM-DD')","  return inputDate === tomorrow","}","","/**"," * @description tells whether input date is in past or not"," * @method past"," * @param  {String|Object}  input"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.past = function (input) {","  return moment().isAfter(input, 'date')","}","","/**"," * @description tells whether input date is in future or not"," * @method future"," * @param  {String|Object}  input"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.future = function (input) {","  return !Raw.past(input)","}","","/**"," * @description tells whether input is after given date"," * @method after"," * @param  {String|Object} input"," * @param  {String|Object} afterDate"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.after = function (input, afterDate) {","  return moment(input).isAfter(afterDate)","}","","/**"," * @description tells whether input is after certain"," * offset from current date"," * @method afterOffsetOf"," * @param  {String}      input"," * @param  {Number}      number"," * @param  {String}      key"," * @return {Boolean}"," * @example"," *   key can be"," *     years        | y"," *     quarters     | Q"," *     months       | M"," *     weeks        | w"," *     days         | d"," *     hours        | h"," *     minutes      | m"," *     seconds      | s"," *     milliseconds | ms"," * @public"," */","Raw.afterOffsetOf = function (input, number, key) {","  const afterDate = moment().add(number, key)","  return moment(input).isAfter(afterDate)","}","","/**"," * @description tells whether input is before certain"," * offset from current date"," * @method beforeOffsetOf"," * @param  {String}      input"," * @param  {Number}      number"," * @param  {String}      key"," * @return {Boolean}"," * @example"," *   key can be"," *     years        | y"," *     quarters     | Q"," *     months       | M"," *     weeks        | w"," *     days         | d"," *     hours        | h"," *     minutes      | m"," *     seconds      | s"," *     milliseconds | ms"," * @public"," */","Raw.beforeOffsetOf = function (input, number, key) {","  const beforeDate = moment().subtract(number, key)","  return moment(input).isBefore(beforeDate)","}","","/**"," * @description tells whether input is before a given date"," * @method before"," * @param  {String|Object} input"," * @param  {String|Object} beforeDate"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.before = function (input, beforeDate) {","  return moment(input).isBefore(beforeDate)","}","","/**"," * @description tells whether input is a valid date for a given"," * format or not"," * @method dateFormat"," * @param  {String}  input"," * @param  {Array}  formats"," * @param  {String}  locale"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," * @public"," */","Raw.dateFormat = function (input, formats, locale) {","  locale = locale || 'en'","  return moment(input, formats, locale, true).isValid()","}","","/**"," * @description tells whether a given date is between 2 dates or not"," * @method inDateRange"," * @param  {String}    input"," * @param  {String}    minDate"," * @param  {String}    maxDate"," * @return {Boolean}"," * @example"," *   accepts"," *   2015-11-30"," *   new Date()"," * @public"," */","Raw.inDateRange = function (input, minDate, maxDate) {","  return moment(input).isBetween(minDate, maxDate)","}","","/**"," * @description makes sure any one value of one array"," * is present in another array"," * @method intersectAny"," * @param  {Array}     input"," * @param  {Array}     intersectionArray"," * @return {Boolean}"," */","Raw.intersectAny = function (input, intersectionArray) {","  const isArrayInstance = input instanceof Array","  const isIntersectionArrayInstance = intersectionArray instanceof Array","  let matchesCount = 0","","  if (!isArrayInstance || !isIntersectionArrayInstance) {","    return false","  }","","  input.filter(function (n) {","    if (intersectionArray.indexOf(n) > -1) {","      matchesCount++","      return","    }","  })","  return matchesCount > 0","}","","/**"," * @description makes sure all values of one array are"," * present in another array"," * @method intersectAll"," * @param  {Array}     input"," * @param  {Array}     intersectionArray"," * @return {Boolean}"," */","Raw.intersectAll = function (input, intersectionArray) {","  const isArrayInstance = input instanceof Array","  const isIntersectionArrayInstance = intersectionArray instanceof Array","  let matchesCount = 0","","  if (!isArrayInstance || !isIntersectionArrayInstance) {","    return false","  }","","  input.filter(function (n) {","    if (intersectionArray.indexOf(n) > -1) {","      matchesCount++","    }","  })","","  return matchesCount === input.length","}",""],"l":{"12":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"36":1,"37":0,"48":1,"49":0,"50":0,"51":0,"52":0,"54":0,"69":1,"70":0,"71":0,"72":0,"74":0,"85":1,"86":0,"97":1,"98":0,"109":1,"110":0,"121":1,"122":0,"133":1,"134":0,"135":0,"136":0,"138":0,"150":1,"151":0,"163":1,"164":0,"179":1,"180":0,"181":0,"183":0,"198":1,"199":0,"210":1,"211":0,"227":1,"228":0,"229":0,"232":0,"233":0,"236":0,"238":0,"240":0,"242":0,"254":1,"255":0,"271":1,"272":0,"283":1,"284":0,"300":1,"301":0,"320":1,"321":0,"322":0,"333":1,"334":0,"345":1,"346":0,"360":1,"361":0,"362":0,"363":0,"365":0,"376":1,"377":0,"388":1,"389":0,"400":1,"401":0,"412":1,"413":0,"424":1,"425":0,"436":1,"437":0,"447":1,"448":0,"458":1,"459":0,"471":1,"472":0,"484":1,"485":0,"498":1,"499":0,"500":0,"512":1,"513":0,"514":0,"515":0,"517":0,"527":1,"528":0,"529":0,"530":0,"531":0,"533":0,"534":0,"535":0,"536":0,"539":0,"554":1,"555":0,"556":0,"557":0,"572":1,"573":0,"574":0,"575":0,"590":1,"591":0,"592":0,"593":0,"607":1,"608":0,"622":1,"623":0,"638":1,"639":0,"663":1,"664":0,"665":0,"689":1,"690":0,"691":0,"706":1,"707":0,"723":1,"724":0,"725":0,"741":1,"742":0,"753":1,"754":0,"755":0,"756":0,"758":0,"759":0,"762":0,"763":0,"764":0,"765":0,"768":0,"779":1,"780":0,"781":0,"782":0,"784":0,"785":0,"788":0,"789":0,"790":0,"794":0}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Modes/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Modes/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":28}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"4":{"start":{"line":17,"column":0},"end":{"line":23,"column":1}},"5":{"start":{"line":18,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":89}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":10}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"9":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":20}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","const availableModes = ['normal', 'strict']","let currentMode = 'normal'","","const Modes = exports = module.exports = {}","","Modes.set = function (mode) {","  if (availableModes.indexOf(mode) <= -1) {","    console.log(`indicative: ${mode} is not a valid mode, switching back to normal mode`)","    return","  }","  currentMode = mode","}","","Modes.get = function () {","  return currentMode","}",""],"l":{"12":1,"13":1,"15":1,"17":1,"18":0,"19":0,"20":0,"22":0,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Validator/engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Validator/engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":33},"end":{"line":31,"column":87}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":40},"end":{"line":51,"column":91}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":39},"end":{"line":75,"column":61}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":53},"end":{"line":76,"column":65}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"6":{"start":{"line":31,"column":0},"end":{"line":38,"column":1}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":46}},"8":{"start":{"line":33,"column":2},"end":{"line":37,"column":3}},"9":{"start":{"line":35,"column":6},"end":{"line":35,"column":107}},"10":{"start":{"line":51,"column":0},"end":{"line":62,"column":1}},"11":{"start":{"line":52,"column":2},"end":{"line":52,"column":66}},"12":{"start":{"line":53,"column":2},"end":{"line":53,"column":75}},"13":{"start":{"line":55,"column":2},"end":{"line":61,"column":4}},"14":{"start":{"line":56,"column":4},"end":{"line":60,"column":6}},"15":{"start":{"line":59,"column":6},"end":{"line":59,"column":49}},"16":{"start":{"line":75,"column":0},"end":{"line":79,"column":1}},"17":{"start":{"line":76,"column":2},"end":{"line":78,"column":4}},"18":{"start":{"line":77,"column":4},"end":{"line":77,"column":67}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":38}},{"start":{"line":32,"column":41},"end":{"line":32,"column":46}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","const Validations = require('../Validations')","const Messages = require('../Messages')","const _ = require('lodash')","const Q = require('q')","","const ValidationEngine = exports = module.exports = {}","","/**"," * validates a field with all assigned validations for that"," * field."," *"," * @param  {Object}  data"," * @param  {String}  field"," * @param  {Object}  validations"," * @param  {Object}  messages"," * @param  {Boolean} [runAll]"," *"," * @return {Promise<Array>}"," */","ValidationEngine.validateField = function (data, field, validations, messages, runAll) {","  const method = runAll ? 'allSettled' : 'all'","  return Q[method](","    _.map(validations, (validation) => {","      return ValidationEngine.runValidationOnField(data, field, validation.name, messages, validation.args)","    })","  )","}","","/**"," * runs a single validation on a given field."," *"," * @param  {Object} data"," * @param  {String} field"," * @param  {String} validation"," * @param  {Object} messages"," * @param  {Array}  [args]"," *"," * @return {Promise}"," */","ValidationEngine.runValidationOnField = function (data, field, validation, messages, args) {","  const message = Messages.make(messages, field, validation, args)","  const validationMethod = ValidationEngine.getValidationMethod(validation)","","  return Q.Promise((resolve, reject) => {","    validationMethod(data, field, message, args, _.get)","    .then(resolve)","    .catch((error) => {","      reject({field, validation, message: error})","    })","  })","}","","/**"," * returns the validation method from the Validations"," * store or throws an error saying validation not"," * found."," *"," * @param  {String} validation"," *"," * @return {Function}"," *"," * @throws {Error} If validation is not found"," */","ValidationEngine.getValidationMethod = function (validation) {","  return _.get(Validations, _.camelCase(validation), function () {","    throw new Error(`${validation} is not defined as a validation`)","  })","}",""],"l":{"12":1,"13":1,"14":1,"15":1,"17":1,"31":1,"32":0,"33":0,"35":0,"51":1,"52":0,"53":0,"55":0,"56":0,"59":0,"75":1,"76":0,"77":0}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Messages/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Messages/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"_returnDefaultMessage","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":61}}},"2":{"name":"_returnValidationMessage","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":64}}},"3":{"name":"_returnFieldValidationMessage","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":69}}},"4":{"name":"_makePopeMessage","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":36}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":53},"end":{"line":74,"column":87}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":16},"end":{"line":104,"column":67}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":15},"end":{"line":120,"column":40}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":24}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"5":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":85}},"7":{"start":{"line":43,"column":0},"end":{"line":45,"column":1}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":29}},"9":{"start":{"line":59,"column":0},"end":{"line":62,"column":1}},"10":{"start":{"line":60,"column":2},"end":{"line":60,"column":74}},"11":{"start":{"line":61,"column":2},"end":{"line":61,"column":98}},"12":{"start":{"line":73,"column":0},"end":{"line":77,"column":1}},"13":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"14":{"start":{"line":75,"column":4},"end":{"line":75,"column":60}},"15":{"start":{"line":86,"column":0},"end":{"line":90,"column":1}},"16":{"start":{"line":92,"column":0},"end":{"line":92,"column":44}},"17":{"start":{"line":104,"column":0},"end":{"line":111,"column":1}},"18":{"start":{"line":105,"column":2},"end":{"line":110,"column":10}},"19":{"start":{"line":107,"column":20},"end":{"line":107,"column":61}},"20":{"start":{"line":108,"column":20},"end":{"line":108,"column":61}},"21":{"start":{"line":109,"column":21},"end":{"line":109,"column":71}},"22":{"start":{"line":120,"column":0},"end":{"line":122,"column":1}},"23":{"start":{"line":121,"column":2},"end":{"line":121,"column":31}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":9},"end":{"line":29,"column":34}},{"start":{"line":29,"column":38},"end":{"line":29,"column":85}}]},"2":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":43}},{"start":{"line":61,"column":47},"end":{"line":61,"column":98}}]},"3":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":43},"end":{"line":74,"column":50}},{"start":{"line":74,"column":53},"end":{"line":76,"column":3}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","const pope = require('pope')","const _ = require('lodash')","","const messagesStore = {}","const arrayExpressionRegex = /\\.\\d/g","","/**"," * returns the default message for a validation."," *"," * @param   {Object} messages"," * @param   {String} field"," * @param   {String} validation"," *"," * @return  {String}"," *"," * @private"," */","function _returnDefaultMessage (messages, field, validation) {","  return messagesStore[validation] || '{{validation}} validation failed on {{field}}'","}","","/**"," * returns a custom validation message for a given validation."," *"," * @param   {Object} messages"," * @param   {String} field"," * @param   {String} validation"," *"," * @return  {String|Function}"," *"," * @private"," */","function _returnValidationMessage (messages, field, validation) {","  return messages[validation]","}","","/**"," * returns a custom validation message for a given field"," * and validation"," *"," * @param   {Object} messages"," * @param   {String} field"," * @param   {String} validation"," *"," * @return  {String|Function}"," *"," * @private"," */","function _returnFieldValidationMessage (messages, field, validation) {","  const fieldToArrayExpression = field.replace(arrayExpressionRegex, '.*')","  return messages[`${field}.${validation}`] || messages[`${fieldToArrayExpression}.${validation}`]","}","","/**"," * returns the message method."," *"," * @param   {Function|String} message"," *"," * @return  {String}"," *"," * @private"," */","function _makePopeMessage (message) {","  return typeof (message) === 'function' ? message : function (field, validation, arg) {","    return pope(message, {field, validation, argument: arg})","  }","}","","/**"," * a custom array holding all the validation message"," * functions. We will later itterate over this"," * array to find the best message."," *"," * @type {Array}"," */","const validationMethods = [","  _returnFieldValidationMessage,","  _returnValidationMessage,","  _returnDefaultMessage","]","","let Messages = exports = module.exports = {}","","/**"," * making a message for a given field and validation."," *"," * @param  {Object} customMessages"," * @param  {String} field"," * @param  {String} validation"," * @param  {Array} args"," *"," * @return {String}"," */","Messages.make = function (customMessages, field, validation, args) {","  return _(validationMethods)","  .chain()","  .find((method) => method(customMessages, field, validation))","  .thru((method) => method(customMessages, field, validation))","  .thru((message) => _makePopeMessage(message)(field, validation, args))","  .value()","}","","/**"," * @description sets a message for a given rule"," * @method set"," * @param  {String} name"," * @param  {String|Function} message"," * @public"," */","Messages.set = function (name, message) {","  messagesStore[name] = message","}",""],"l":{"11":1,"12":1,"14":1,"15":1,"28":1,"29":0,"43":1,"44":0,"59":1,"60":0,"61":0,"73":1,"74":0,"75":0,"86":1,"92":1,"104":1,"105":0,"107":0,"108":0,"109":0,"120":1,"121":0}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Sanitization/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Sanitization/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_getSanitizationMethod","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":45},"end":{"line":30,"column":57}}},"3":{"name":"_sanitizeFieldValue","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":50}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":24},"end":{"line":63,"column":47}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":32},"end":{"line":84,"column":56}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"5":{"start":{"line":29,"column":0},"end":{"line":33,"column":1}},"6":{"start":{"line":30,"column":2},"end":{"line":32,"column":4}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":59}},"8":{"start":{"line":47,"column":0},"end":{"line":52,"column":1}},"9":{"start":{"line":48,"column":2},"end":{"line":51,"column":24}},"10":{"start":{"line":49,"column":4},"end":{"line":49,"column":56}},"11":{"start":{"line":50,"column":4},"end":{"line":50,"column":39}},"12":{"start":{"line":63,"column":0},"end":{"line":70,"column":1}},"13":{"start":{"line":64,"column":2},"end":{"line":64,"column":37}},"14":{"start":{"line":65,"column":2},"end":{"line":65,"column":61}},"15":{"start":{"line":66,"column":2},"end":{"line":69,"column":15}},"16":{"start":{"line":67,"column":4},"end":{"line":67,"column":65}},"17":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"18":{"start":{"line":72,"column":0},"end":{"line":72,"column":32}},"19":{"start":{"line":84,"column":0},"end":{"line":89,"column":1}},"20":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"21":{"start":{"line":86,"column":4},"end":{"line":86,"column":97}},"22":{"start":{"line":88,"column":2},"end":{"line":88,"column":39}}},"branchMap":{"1":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","let Sanitization = exports = module.exports = {}","","const _ = require('lodash')","const Parser = require('../Parser')","const filters = require('./filters')","","/**"," * returns sanitization method for a filter name"," *"," * @param   {String} filter"," *"," * @return  {Function}        [description]"," *"," * @throws {Error} If filter is not found"," *"," * @private"," */","function _getSanitizationMethod (filter) {","  return _.get(filters, _.camelCase(filter), function () {","    throw new Error(`${filter} is not defined as a filter`)","  })","}","","/**"," * sanitizes a given field value by looping over"," * all the rules defined next to the field."," *"," * @param   {Object} data"," * @param   {Array} rules"," * @param   {String} field"," *"," * @return  {String}"," *"," * @private"," */","function _sanitizeFieldValue (data, rules, field) {","  return _.reduce(rules, (value, rule) => {","    const ruleMethod = _getSanitizationMethod(rule.name)","    return ruleMethod(value, rule.args)","  }, _.get(data, field))","}","","/**"," * sanitizes a given set of data with given set"," * of rules."," *"," * @param  {Object} data"," * @param  {Object} rules"," *"," * @return {Object}"," */","Sanitization.sanitize = function (data, rules) {","  const clonedSet = _.cloneDeep(data)","  const transformedRules = Parser.transformRules(data, rules)","  return _.reduce(transformedRules, (result, rules, field) => {","    _.set(result, field, _sanitizeFieldValue(data, rules, field))","    return result","  }, clonedSet)","}","","Sanitization.sanitizor = filters","","/**"," * exposes an interface to extend filters"," *"," * @param  {String} name"," * @param  {Function} method"," *"," * @return {void}"," *"," * @throws {Error} If method is not a function"," */","Sanitization.sanitizor.extend = function (name, method) {","  if (typeof (method) !== 'function') {","    throw new Error('Invalid arguments, sanitizor.extend expects 2nd parameter to be a function')","  }","  Sanitization.sanitizor[name] = method","}",""],"l":{"12":1,"14":1,"15":1,"16":1,"29":1,"30":0,"31":0,"47":1,"48":0,"49":0,"50":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"72":1,"84":1,"85":0,"86":0,"88":0}},"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Sanitization/filters.js":{"path":"/home/travis/build/npmtest/node-npmtest-indicative/node_modules/indicative/src/Sanitization/filters.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":0,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":1,"67":0,"68":1,"69":0,"70":1,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":1,"79":0,"80":1,"81":0,"82":1,"83":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"_isNormalizeableProvider","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":43}}},"2":{"name":"_isHotmail","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":29}}},"3":{"name":"_replace","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":46}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":32},"end":{"line":67,"column":55}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":29},"end":{"line":79,"column":46}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":37},"end":{"line":105,"column":60}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":17},"end":{"line":113,"column":35}}},"8":{"name":"(anonymous_8)","line":158,"loc":{"start":{"line":158,"column":32},"end":{"line":158,"column":49}}},"9":{"name":"(anonymous_9)","line":173,"loc":{"start":{"line":173,"column":30},"end":{"line":173,"column":47}}},"10":{"name":"(anonymous_10)","line":186,"loc":{"start":{"line":186,"column":28},"end":{"line":186,"column":51}}},"11":{"name":"(anonymous_11)","line":198,"loc":{"start":{"line":198,"column":29},"end":{"line":198,"column":46}}},"12":{"name":"(anonymous_12)","line":210,"loc":{"start":{"line":210,"column":33},"end":{"line":210,"column":50}}},"13":{"name":"(anonymous_13)","line":211,"loc":{"start":{"line":211,"column":37},"end":{"line":211,"column":61}}},"14":{"name":"(anonymous_14)","line":226,"loc":{"start":{"line":226,"column":32},"end":{"line":226,"column":55}}},"15":{"name":"(anonymous_15)","line":235,"loc":{"start":{"line":235,"column":29},"end":{"line":235,"column":46}}},"16":{"name":"(anonymous_16)","line":239,"loc":{"start":{"line":239,"column":31},"end":{"line":239,"column":48}}},"17":{"name":"(anonymous_17)","line":243,"loc":{"start":{"line":243,"column":32},"end":{"line":243,"column":49}}},"18":{"name":"(anonymous_18)","line":247,"loc":{"start":{"line":247,"column":33},"end":{"line":247,"column":50}}},"19":{"name":"(anonymous_19)","line":251,"loc":{"start":{"line":251,"column":35},"end":{"line":251,"column":52}}},"20":{"name":"(anonymous_20)","line":255,"loc":{"start":{"line":255,"column":28},"end":{"line":255,"column":45}}},"21":{"name":"(anonymous_21)","line":259,"loc":{"start":{"line":259,"column":33},"end":{"line":259,"column":50}}},"22":{"name":"(anonymous_22)","line":263,"loc":{"start":{"line":263,"column":29},"end":{"line":263,"column":46}}},"23":{"name":"(anonymous_23)","line":267,"loc":{"start":{"line":267,"column":27},"end":{"line":267,"column":44}}},"24":{"name":"(anonymous_24)","line":271,"loc":{"start":{"line":271,"column":31},"end":{"line":271,"column":48}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"6":{"start":{"line":27,"column":0},"end":{"line":29,"column":1}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":29}},"8":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":37}},"10":{"start":{"line":52,"column":0},"end":{"line":57,"column":1}},"11":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"13":{"start":{"line":56,"column":2},"end":{"line":56,"column":42}},"14":{"start":{"line":67,"column":0},"end":{"line":70,"column":1}},"15":{"start":{"line":68,"column":2},"end":{"line":68,"column":56}},"16":{"start":{"line":69,"column":2},"end":{"line":69,"column":44}},"17":{"start":{"line":79,"column":0},"end":{"line":94,"column":1}},"18":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"19":{"start":{"line":81,"column":4},"end":{"line":81,"column":16}},"20":{"start":{"line":84,"column":2},"end":{"line":93,"column":3}},"21":{"start":{"line":105,"column":0},"end":{"line":148,"column":1}},"22":{"start":{"line":106,"column":2},"end":{"line":110,"column":3}},"23":{"start":{"line":112,"column":2},"end":{"line":124,"column":3}},"24":{"start":{"line":113,"column":4},"end":{"line":123,"column":6}},"25":{"start":{"line":114,"column":6},"end":{"line":116,"column":7}},"26":{"start":{"line":115,"column":8},"end":{"line":115,"column":33}},"27":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"28":{"start":{"line":118,"column":8},"end":{"line":118,"column":34}},"29":{"start":{"line":120,"column":6},"end":{"line":122,"column":7}},"30":{"start":{"line":121,"column":8},"end":{"line":121,"column":39}},"31":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"32":{"start":{"line":127,"column":4},"end":{"line":127,"column":16}},"33":{"start":{"line":130,"column":2},"end":{"line":130,"column":37}},"34":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"35":{"start":{"line":133,"column":4},"end":{"line":133,"column":16}},"36":{"start":{"line":136,"column":2},"end":{"line":136,"column":80}},"37":{"start":{"line":137,"column":2},"end":{"line":137,"column":95}},"38":{"start":{"line":139,"column":2},"end":{"line":141,"column":3}},"39":{"start":{"line":140,"column":4},"end":{"line":140,"column":37}},"40":{"start":{"line":143,"column":2},"end":{"line":145,"column":3}},"41":{"start":{"line":144,"column":4},"end":{"line":144,"column":42}},"42":{"start":{"line":147,"column":2},"end":{"line":147,"column":32}},"43":{"start":{"line":158,"column":0},"end":{"line":163,"column":1}},"44":{"start":{"line":159,"column":2},"end":{"line":161,"column":3}},"45":{"start":{"line":160,"column":4},"end":{"line":160,"column":16}},"46":{"start":{"line":162,"column":2},"end":{"line":162,"column":13}},"47":{"start":{"line":173,"column":0},"end":{"line":175,"column":1}},"48":{"start":{"line":174,"column":2},"end":{"line":174,"column":26}},"49":{"start":{"line":186,"column":0},"end":{"line":189,"column":1}},"50":{"start":{"line":187,"column":2},"end":{"line":187,"column":60}},"51":{"start":{"line":188,"column":2},"end":{"line":188,"column":31}},"52":{"start":{"line":198,"column":0},"end":{"line":201,"column":1}},"53":{"start":{"line":199,"column":2},"end":{"line":199,"column":35}},"54":{"start":{"line":200,"column":2},"end":{"line":200,"column":69}},"55":{"start":{"line":210,"column":0},"end":{"line":214,"column":1}},"56":{"start":{"line":211,"column":2},"end":{"line":213,"column":4}},"57":{"start":{"line":212,"column":4},"end":{"line":212,"column":23}},"58":{"start":{"line":226,"column":0},"end":{"line":233,"column":1}},"59":{"start":{"line":227,"column":2},"end":{"line":227,"column":48}},"60":{"start":{"line":228,"column":2},"end":{"line":228,"column":40}},"61":{"start":{"line":229,"column":2},"end":{"line":231,"column":3}},"62":{"start":{"line":230,"column":4},"end":{"line":230,"column":40}},"63":{"start":{"line":232,"column":2},"end":{"line":232,"column":59}},"64":{"start":{"line":235,"column":0},"end":{"line":237,"column":1}},"65":{"start":{"line":236,"column":2},"end":{"line":236,"column":33}},"66":{"start":{"line":239,"column":0},"end":{"line":241,"column":1}},"67":{"start":{"line":240,"column":2},"end":{"line":240,"column":35}},"68":{"start":{"line":243,"column":0},"end":{"line":245,"column":1}},"69":{"start":{"line":244,"column":2},"end":{"line":244,"column":32}},"70":{"start":{"line":247,"column":0},"end":{"line":249,"column":1}},"71":{"start":{"line":248,"column":2},"end":{"line":248,"column":34}},"72":{"start":{"line":251,"column":0},"end":{"line":253,"column":1}},"73":{"start":{"line":252,"column":2},"end":{"line":252,"column":36}},"74":{"start":{"line":255,"column":0},"end":{"line":257,"column":1}},"75":{"start":{"line":256,"column":2},"end":{"line":256,"column":32}},"76":{"start":{"line":259,"column":0},"end":{"line":261,"column":1}},"77":{"start":{"line":260,"column":2},"end":{"line":260,"column":34}},"78":{"start":{"line":263,"column":0},"end":{"line":265,"column":1}},"79":{"start":{"line":264,"column":2},"end":{"line":264,"column":33}},"80":{"start":{"line":267,"column":0},"end":{"line":269,"column":1}},"81":{"start":{"line":268,"column":2},"end":{"line":268,"column":36}},"82":{"start":{"line":271,"column":0},"end":{"line":273,"column":1}},"83":{"start":{"line":272,"column":2},"end":{"line":272,"column":32}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"3":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"4":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"5":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"6":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"7":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"8":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"9":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":37},"end":{"line":136,"column":64}},{"start":{"line":136,"column":67},"end":{"line":136,"column":80}}]},"10":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":54},"end":{"line":137,"column":65}},{"start":{"line":137,"column":68},"end":{"line":137,"column":95}}]},"11":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"12":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":29}},{"start":{"line":139,"column":33},"end":{"line":139,"column":65}}]},"13":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"14":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":24}},{"start":{"line":143,"column":28},"end":{"line":143,"column":47}}]},"15":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"16":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":6},"end":{"line":159,"column":12}},{"start":{"line":159,"column":16},"end":{"line":159,"column":33}},{"start":{"line":159,"column":37},"end":{"line":159,"column":50}}]},"17":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":48},"end":{"line":187,"column":55}},{"start":{"line":187,"column":58},"end":{"line":187,"column":60}}]},"18":{"line":200,"type":"cond-expr","locations":[{"start":{"line":200,"column":53},"end":{"line":200,"column":57}},{"start":{"line":200,"column":60},"end":{"line":200,"column":69}}]},"19":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":18},"end":{"line":227,"column":25}},{"start":{"line":227,"column":29},"end":{"line":227,"column":47}}]},"20":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"21":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":39},"end":{"line":232,"column":51}},{"start":{"line":232,"column":54},"end":{"line":232,"column":59}}]}},"code":["'use strict'","","/**"," * indicative"," *"," * (c) Harminder Virk <virk@adonisjs.com>"," *"," * For the full copyright and license information, please view the LICENSE"," * file that was distributed with this source code.","*/","","const domains = /^hotmail\\.com|gmail\\.com|live\\.com$/","const linksRegex = /<a\\b[^>]*>(.*?)<\\/a>/ig","const tagsRegex = /<\\/?[^>]+(>|$)/g","","const inflect = require('inflect')","","let SanitizationFilters = exports = module.exports = {}","","/**"," * @description tells whether domain falls in one of the"," * normalized providers or not"," * @method _isNormalizeableProvider"," * @param  {String}                 domain"," * @return {Boolean}"," */","function _isNormalizeableProvider (domain) {","  return domains.test(domain)","}","","/**"," * @description tells whether email is hotmail or not"," * @method _isHotmail"," * @param  {String}   domain"," * @return {Boolean}"," * @private"," */","function _isHotmail (domain) {","  return /hotmail\\.com$/.test(domain)","}","","/**"," * @description replaces a pattern with a substitue"," * only if value is a string"," * @method _replace"," * @param  {Mixed} value"," * @param  {Regex} pattern"," * @param  {String|Function} subsitute"," * @return {Mixed}"," * @private"," */","function _replace (value, pattern, subsitute) {","  if (typeof (value) !== 'string') {","    return value","  }","  return value.replace(pattern, subsitute)","}","","/**"," * @description removes blacklisted values from string"," * @method blacklist"," * @param  {String}  value"," * @param  {Array}  args"," * @return {String}"," * @public"," */","SanitizationFilters.blacklist = function (value, args) {","  const blacklistRegex = new RegExp(`[${args[0]}]`, 'g')","  return _replace(value, blacklistRegex, '')","}","","/**"," * @description escapes an input if it's string"," * @method escape"," * @param  {String} value"," * @return {String}"," * @public"," */","SanitizationFilters.escape = function (value) {","  if (typeof (value) !== 'string') {","    return value","  }","","  return (","  value","    .replace(/&/g, '&amp;')","    .replace(/\"/g, '&quot;')","    .replace(/'/g, '&#x27;')","    .replace(/</g, '&lt;')","    .replace(/>/g, '&gt;')","    .replace(/\\//g, '&#x2F;')","    .replace(/\\//g, '&#96;')","  )","}","","/**"," * @description normalizes an email by removing all unncessary"," * characters from it"," * @method normalizeEmail"," * @param  {String}       value"," * @param  {Array}       args"," * @return {String}"," * @public"," */","SanitizationFilters.normalizeEmail = function (value, args) {","  const options = {","    lowercase: true,","    removeDots: true,","    removeExtension: true","  }","","  if (args instanceof Array) {","    args.forEach(function (option) {","      if (option === '!lc') {","        options.lowercase = false","      }","      if (option === '!rd') {","        options.removeDots = false","      }","      if (option === '!re') {","        options.removeExtension = false","      }","    })","  }","","  if (typeof (value) !== 'string') {","    return value","  }","","  const splitValue = value.split('@')","","  if (!splitValue[1]) {","    return value","  }","","  let username = options.lowercase ? splitValue[0].toLowerCase() : splitValue[0]","  const domain = splitValue[1] === 'googlemail.com' ? 'gmail.com' : splitValue[1].toLowerCase()","","  if (options.removeExtension && _isNormalizeableProvider(domain)) {","    username = username.split('+')[0]","  }","","  if (options.removeDots && !_isHotmail(domain)) {","    username = username.replace(/\\./g, '')","  }","","  return `${username}@${domain}`","}","","/**"," * @description coverts a value to boolean all values"," * with positive inputs yields to true"," * @method toBoolean"," * @param  {Mixed}  value"," * @return {Boolean}"," * @public"," */","SanitizationFilters.toBoolean = function (value) {","  if (!value || value === 'false' || value === '0') {","    return false","  }","  return true","}","","/**"," * @description converts a value to float or returns"," * NaN when unable to make it a flat"," * @method toFloat"," * @param  {Mixed} value"," * @return {Float}"," * @public"," */","SanitizationFilters.toFloat = function (value) {","  return parseFloat(value)","}","","/**"," * @description coverts a value to integer or returns"," * NaN"," * @method toInt"," * @param  {Mixed} value"," * @param  {Array} args"," * @return {Integer}"," * @public"," */","SanitizationFilters.toInt = function (value, args) {","  const radix = typeof (args[0]) === 'number' ? args[0] : 10","  return parseInt(value, radix)","}","","/**"," * @desription converts a date to a date object or"," * return null when invalid date"," * @method toDate"," * @param  {Mixed} value"," * @return {String}"," */","SanitizationFilters.toDate = function (value) {","  const dateValue = new Date(value)","  return (dateValue.toString() === 'Invalid Date') ? null : dateValue","}","","/**"," * @description strips a tags from string"," * @method stripLinks"," * @param  {String}   value"," * @return {String}"," * @public"," */","SanitizationFilters.stripLinks = function (value) {","  return _replace(value, linksRegex, function (index, group) {","    return group.trim()","  })","}","","/**"," * @description strips html tags from a give value"," * and also removes unwanted spaces if trim is"," * set to true"," * @method stripTags"," * @param  {String}  value"," * @param  {Array}  args"," * @return {String}"," * @public"," */","SanitizationFilters.stripTags = function (value, args) {","  const strict = (args[0] && args[0] === 'trim')","  value = _replace(value, tagsRegex, '')","  if (strict) {","    value = _replace(value, /\\s+/g, ' ')","  }","  return typeof (value) === 'string' ? value.trim() : value","}","","SanitizationFilters.plural = function (value) {","  return inflect.pluralize(value)","}","","SanitizationFilters.singular = function (value) {","  return inflect.singularize(value)","}","","SanitizationFilters.camelCase = function (value) {","  return inflect.camelize(value)","}","","SanitizationFilters.capitalize = function (value) {","  return inflect.capitalize(value)","}","","SanitizationFilters.decapitalize = function (value) {","  return inflect.decapitalize(value)","}","","SanitizationFilters.title = function (value) {","  return inflect.titleize(value)","}","","SanitizationFilters.underscore = function (value) {","  return inflect.underscore(value)","}","","SanitizationFilters.toDash = function (value) {","  return inflect.dasherize(value)","}","","SanitizationFilters.slug = function (value) {","  return inflect.parameterize(value)","}","","SanitizationFilters.humanize = function (value) {","  return inflect.humanize(value)","}",""],"l":{"12":1,"13":1,"14":1,"16":1,"18":1,"27":1,"28":0,"38":1,"39":0,"52":1,"53":0,"54":0,"56":0,"67":1,"68":0,"69":0,"79":1,"80":0,"81":0,"84":0,"105":1,"106":0,"112":0,"113":0,"114":0,"115":0,"117":0,"118":0,"120":0,"121":0,"126":0,"127":0,"130":0,"132":0,"133":0,"136":0,"137":0,"139":0,"140":0,"143":0,"144":0,"147":0,"158":1,"159":0,"160":0,"162":0,"173":1,"174":0,"186":1,"187":0,"188":0,"198":1,"199":0,"200":0,"210":1,"211":0,"212":0,"226":1,"227":0,"228":0,"229":0,"230":0,"232":0,"235":1,"236":0,"239":1,"240":0,"243":1,"244":0,"247":1,"248":0,"251":1,"252":0,"255":1,"256":0,"259":1,"260":0,"263":1,"264":0,"267":1,"268":0,"271":1,"272":0}}}